<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">20</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IlhSdmtvOFA3QTNVYVdTblU3Yk05blQwTWpoQSIsImtpZCI6IlhSdmtvOFA3QTNVYVdTblU3Yk05blQwTWpoQSJ9.eyJhdWQiOiIxNjJkMDkzMy1lNjA0LTQ1ZTgtOTQ1Yi02NTc5YWIyYTg2OGIiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC84MWZhNzY2ZS1hMzQ5LTQ4NjctOGJmNC1hYjM1ZTI1MGEwOGYvIiwiaWF0IjoxNzA5Nzk1NjA5LCJuYmYiOjE3MDk3OTU2MDksImV4cCI6MTcwOTc5OTUwOSwiYWlvIjoiRTJOZ1lIaTgvSlhKVlg3aE9TZk1aZE8vOVd6S0F3QT0iLCJhcHBpZCI6IjgxYzg0OGVjLWI1MGEtNDZhNS1hMDlmLTU0ODhlMzYyOTlmYSIsImFwcGlkYWNyIjoiMSIsImlkcCI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzgxZmE3NjZlLWEzNDktNDg2Ny04YmY0LWFiMzVlMjUwYTA4Zi8iLCJvaWQiOiJiNThiN2NkZS0zYzIyLTQ0OTktYTg5OS0xMzdlZDA3NThlMzUiLCJyaCI6IjAuQVF3QWJuYjZnVW1qWjBpTDlLczE0bENnanpNSkxSWUU1dWhGbEZ0bGVhc3Fob3NNQUFBLiIsInN1YiI6ImI1OGI3Y2RlLTNjMjItNDQ5OS1hODk5LTEzN2VkMDc1OGUzNSIsInRpZCI6IjgxZmE3NjZlLWEzNDktNDg2Ny04YmY0LWFiMzVlMjUwYTA4ZiIsInV0aSI6InhsTllaMFFBdWthaTR0MmZGeHBDQVEiLCJ2ZXIiOiIxLjAifQ.kbAZC09sudD7BwrIIsatgL_5QFDCcr0itKa_tfwfa-qv4xyI8TWfZ1inZzAli0jqo4Oy0uCEdMl-Z056lwvEwqECIzw8MB4IMQR6MpOl_K_M4itMPIqkM5E77siD9HyycIQ17_GhHHud-ePW5mI7NcqoPTNu1gavw0XWWREK--DJAXuv7CmulGR5xWk2oymJ7pCHdd9NxIiWJUxIYZ1nQc-6-Hg_0vOkpRFs1tBLN37tp5gUqxL-enXvOcH0cB9zG7v0OFHhO6woudTefjXWwaD9I4FoJbxmj2sPvxXjC1ddEhvFGXoPBpDvPbpCBn_8RVKuoCtl-m8l_V8-JVooQQ</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Cache-Control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
              <stringProp name="Header.value">f17c8041cdbb43b290ff0c6e6350846e</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="RestCar_VIN" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;brand&quot;: &quot;VCC&quot;,&#xd;
    &quot;component&quot;: &quot;RESET_VIDA&quot;,&#xd;
    &quot;task&quot;: &quot;ResetCar&quot;,&#xd;
    &quot;authorizationId&quot;: &quot;1mbai_06_10&quot;,&#xd;
    &quot;creationDateTime&quot;: &quot;2023-10-04T07:32:46Z&quot;,&#xd;
    &quot;bodId&quot;: &quot;QA_06_10&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;source&quot;: &quot;AU&quot;,&#xd;
        &quot;eventDetails&quot;: {&#xd;
            &#xd;
          &#xd;
            &quot;VIN&quot;: &quot;${VIN}&quot;,&#xd;
              &quot;eventTimestamp&quot;: &quot;2024-02-28 00:00:03&quot;&#xd;
&#xd;
             &#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">cdb-qa.icpqa.volvocars.biz</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/ConsumerhubGatewayWeb/HandleEventRestAPIService/rest/api/v1</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1204498028">BODSuccess</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">Resetcar_Vin_1.csv</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">Resrcar_vin_Summary.csv</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\Users\PMAHABAD\Downloads\View_result_table_restcar7.csv</stringProp>
        </ResultCollector>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers"/>
        </HeaderManager>
        <hashTree/>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
          <collectionProp name="AuthManager.auth_list">
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url"></stringProp>
              <stringProp name="Authorization.username">Ocp-Apim-Subscription-Key</stringProp>
              <stringProp name="Authorization.password">f17c8041cdbb43b290ff0c6e6350846e</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
          </collectionProp>
          <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
        </AuthManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Kafka-Post" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;SOAP-ENV:Envelope xmlns=&quot;http://gateway.consumerhub.commercial.volvocars.net/oagis&quot; xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;http://www.openapplications.org/oagis&quot;&gt;&#xd;
   &lt;SOAP-ENV:Body&gt;&#xd;
      &lt;UpdateConsumerAndOpportunityData_v1 xmlns:ns3=&quot;http://www.ford.com/oagis&quot;&gt;&#xd;
         &lt;ns1:ApplicationArea&gt;&#xd;
            &lt;ns1:Sender&gt;&#xd;
               &lt;ns1:LogicalId&gt;Volvo&lt;/ns1:LogicalId&gt;&#xd;
               &lt;ns1:Component&gt;OM&lt;/ns1:Component&gt;&#xd;
               &lt;ns1:Task&gt;SyncConsumer&lt;/ns1:Task&gt;&#xd;
               &lt;ns1:AuthorizationId&gt;Triall&lt;/ns1:AuthorizationId&gt;&#xd;
            &lt;/ns1:Sender&gt;&#xd;
            &lt;ns1:CreationDateTime&gt;2022-11-14T20:16:52Z&lt;/ns1:CreationDateTime&gt;&#xd;
            &lt;ns1:BODId&gt;804915c0-d7e7-478d-9337-b203b068fb00&lt;/ns1:BODId&gt;&#xd;
         &lt;/ns1:ApplicationArea&gt;&#xd;
         &lt;DataArea&gt;&#xd;
            &lt;Consumer&gt;&#xd;
               &lt;Header&gt;&#xd;
                  &lt;Source&gt;DE&lt;/Source&gt;&#xd;
               &lt;/Header&gt;&#xd;
&#xd;
&#xd;
                 &lt;ConsumerDetails Category=&quot;Person&quot;&gt;&#xd;
&lt;ConsumerId&gt;&#xd;
   &#xd;
   &#xd;
&#xd;
&lt;/ConsumerId&gt;&#xd;
&lt;PersonDetails&gt;&#xd;
&lt;FirstName&gt;LT_Update23_03_${__Random(1,2147483647,)}&lt;/FirstName&gt;&#xd;
&lt;Surname&gt;LT_Update23_03_${__Random(1,2147483647,)}&lt;/Surname&gt;&#xd;
&lt;Gender&gt;M&lt;/Gender&gt;   &#xd;
 &lt;DateOfBirth&gt;1984-09-24&lt;/DateOfBirth&gt;&#xd;
&lt;/PersonDetails&gt;&#xd;
&lt;EmailAddress &gt;volvocars_${__Random(1,2142,)}_@gmail.com&lt;/EmailAddress&gt;&#xd;
&#xd;
  &lt;Address Main=&quot;true&quot; Type=&quot;ADDR_HOME&quot;&gt;&#xd;
                   &lt;Line1&gt;Test_1__${__Random(1,2147483647,)}&lt;/Line1&gt;&#xd;
                   &lt;Line2&gt;Test_2__${__Random(1,2147483647,)}&lt;/Line2&gt;&#xd;
                  &#xd;
                     &lt;PostalCodeNumber&gt;7300&lt;/PostalCodeNumber&gt;&#xd;
                    &lt;/City&gt;&#xd;
                  &lt;/Address&gt;&#xd;
                  &#xd;
                     &lt;/ConsumerDetails&gt;&#xd;
            &lt;/Consumer&gt;&#xd;
         &lt;/DataArea&gt;&#xd;
      &lt;/UpdateConsumerAndOpportunityData_v1&gt;&#xd;
   &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">cdb-qa.icpqa.volvocars.biz</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ConsumerhubGatewayWeb/UpdateConsumerAndOpportunityDataService_v1</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
import org.w3c.dom.Document;
import org.xml.sax.InputSource;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathFactory;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import java.io.StringReader;

// XML response string
String response = prev.getResponseDataAsString();

try {
    // Create a DocumentBuilderFactory
    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
    DocumentBuilder builder = factory.newDocumentBuilder();
    
    // Parse the XML response
    Document doc = builder.parse(new InputSource(new StringReader(response)));

    // Create an XPath instance
    XPath xpath = XPathFactory.newInstance().newXPath();
    
    // Use XPath to extract GlobalConsumerId
    String globalConsumerIdExpression = &quot;//Consumer/ConsumerId/Id[@Type=&apos;GlobalConsumerId&apos;]&quot;; // XPath expression to find Id element with Type attribute &apos;GlobalConsumerId&apos;
    String globalConsumerId = (String) xpath.compile(globalConsumerIdExpression).evaluate(doc, XPathConstants.STRING);
    
    // Use XPath to extract ConsumerId
    String consumerIdExpression = &quot;//Consumer/ConsumerId/Id[@Type=&apos;ConsumerId&apos;]&quot;; // XPath expression to find Id element with Type attribute &apos;ConsumerId&apos;
    String consumerId = (String) xpath.compile(consumerIdExpression).evaluate(doc, XPathConstants.STRING);
    
    // Now you can use &apos;globalConsumerId&apos; and &apos;consumerId&apos; as needed
    File f = new File(&quot;C:\\Jmeter\\apache-jmeter-5.4.1\\bin\\ConsumerID.csv&quot;);
    FileWriter fw = new FileWriter(f, true); // Use &apos;true&apos; to append to the file
    BufferedWriter bw = new BufferedWriter(fw);
    
    // Writing the globalConsumerId and consumerId to the CSV file
    bw.write(globalConsumerId + &quot;,&quot; + consumerId + &quot;\n&quot;); // You might need to adjust the format as per your requirements
    
    // Close the resources
    bw.close();
    fw.close();
} catch (Exception e) {
    log.error(&quot;Error occurred: &quot; + e.getMessage());
    e.printStackTrace();
}</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">consumerId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.responseDetails.consumerId.id[?(@.type == &apos;ConsumerId&apos;)].value</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion- For Consumer Category" enabled="false">
          <stringProp name="JSON_PATH">$.responseDetails.consumerInfo.consumerCategory</stringProp>
          <stringProp name="EXPECTED_VALUE">Person</stringProp>
          <boolProp name="JSONVALIDATION">false</boolProp>
          <boolProp name="EXPECT_NULL">false</boolProp>
          <boolProp name="INVERT">false</boolProp>
          <boolProp name="ISREGEX">false</boolProp>
        </JSONPathAssertion>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Kafka-GetConsumerID" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">gw.qa.partner.api.volvocars.biz</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/consumer/consumerIds/${consumerId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="filename">C:/Jmeter/apache-jmeter-5.4.1/bin/ConsumerID.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">GlobalConsumerID,ConsumerID</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter"></stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">false</boolProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion- StatusCode" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion-ConsumerID" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1829147061">${ConsumerID}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.sample_label</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion- Consumer Cateogry" enabled="false">
            <stringProp name="JSON_PATH">$.responseDetails.consumerInfo.consumerCategory</stringProp>
            <stringProp name="EXPECTED_VALUE">Person</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Contact Email details" enabled="false">
            <stringProp name="JSON_PATH">$..[?(@.active == true)].value</stringProp>
            <stringProp name="EXPECTED_VALUE">.*@.*\.com</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address" enabled="false">
            <stringProp name="JSON_PATH">$.responseDetails.addresses.[*].active</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="49586">200</stringProp>
          </collectionProp>
          <stringProp name="Assertion.custom_message"></stringProp>
          <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
          <boolProp name="Assertion.assume_success">false</boolProp>
          <intProp name="Assertion.test_type">2</intProp>
        </ResponseAssertion>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">cookie</stringProp>
              <stringProp name="Header.value">vts_CDB_QA=eyJraWQiOiJOZUl6c0UyMWQ1bjFfclBPbTh5WS10Tm8yQzBDY0ZtVzRWZ0d3aEtnTWwwIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJ0b2tlbl90eXBlIjoiQmVhcmVyIiwiYXVkIjoiQ0RCX1FBIiwic3ViIjoicF9jZGJxYSIsImZpcnN0TmFtZSI6InBfY2RicWEiLCJsYXN0TmFtZSI6InBfY2RicWEiLCJncm91cHMiOltdLCJ2dGkiOiI3N2U3NmIyYi05MGVjLTQwOGUtYWE0Zi01YzFhNDcxMWRiMTEiLCJjZHNpZCI6InBfY2RicWEiLCJpc3MiOiJ2b2x2b2NhcnMiLCJleHAiOjE3MTcyNDc0MzUsImlhdCI6MTY4NTcxMTQzNX0.keEdXejpgkuRs-9wA2q3w4t-lPIxC8Su7fJfvk98FB_71A3ZvTu9BtdPRksGAjMPeOqqMKcrG9HEayNBRYkDqxamwhI2JK3cfQamcQuf6nE60xbyP_Aj-sgnn8S2jQs_IkjhKdHEYezC5vM2um3IBTzHGnPfulrHP2u3Nh02TMtniVqh0ilMLJPimI8tHinvHUOdKSQA6qZm2V3xBncBdbIuntcH2jSBWG8cYfeaDIkQe1cHiBcOhd_0OdeWFn_TfOCGnkmP9mH406uK6pXzX6nhteFiaXrxeQyj4SYGWnIQJLVhDAKFMkdXr8GGt3Gi3A5Sasuizfv7pNED0NbRplqAs06hk6lhRYcJGCgE0B_5w1yJnvzmZ-oWhTZPBGF-YPOJwFZTKrutwIgxBQtMnAhOM2Gqva6VU7zhEFizSPYisgbTQawZ2WhxPf-csyYk7QWQmdLkmgj5P3HO9kE8IKofLY_OZ-D5MX5IZYO9AKwiibW7ue81jqM39B9a0axf5AJMYqYWHUTnmhhpCtplNu-d9Zbd3u461FctT2fi1jiTZp2GI0oLBU1ReUjqmVfAk34MTXYI2gPb9TsLHGucXwkPy-dcvQUgmh7alTbmAIoBJNcy9_5-DlGPVscnBkTljnBq2aKCtvCLIa60cgXb-5GYxMbkA2_lTnlhyQAvtQ8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="false">
          <stringProp name="IfController.condition">${__javaScript(&quot;${CONTACT_EXISTS}&quot;==&quot;true&quot;)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Contact Email details" enabled="true">
            <stringProp name="JSON_PATH">$..[?(@.active == true)].value</stringProp>
            <stringProp name="EXPECTED_VALUE">.*@.*\.com</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create_Get-Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">gw.qa.partner.api.volvocars.biz</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/consumer/consumerIds/${consumerid}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_firstName" enabled="true">
            <stringProp name="JSON_PATH">$.responseDetails.personDetails.firstName</stringProp>
            <stringProp name="EXPECTED_VALUE">${firstName}</stringProp>
            <boolProp name="JSONVALIDATION">false</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_AlternativeID_MyVolvoID" enabled="true">
            <stringProp name="JSON_PATH">$.responseDetails.alternativeConsumerIds[?(@.type == &apos;ALT_ID_MY_VOLVO_ID&apos;)].value</stringProp>
            <stringProp name="EXPECTED_VALUE">^39d8e543-\d+$</stringProp>
            <boolProp name="JSONVALIDATION">false</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_AlternativeFalg_MyVolvoID" enabled="true">
            <stringProp name="JSON_PATH">$.responseDetails.alternativeConsumerIds[?(@.type == &apos;ALT_ID_MY_VOLVO_ID&apos;)].active</stringProp>
            <stringProp name="EXPECTED_VALUE">True</stringProp>
            <boolProp name="JSONVALIDATION">false</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_Line1" enabled="true">
            <stringProp name="JSON_PATH">$.responseDetails.addresses[0].addressLine1</stringProp>
            <stringProp name="EXPECTED_VALUE">^Klareborg c.*</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_Line2" enabled="true">
            <stringProp name="JSON_PATH">$.responseDetails.addresses[0].addressLine2</stringProp>
            <stringProp name="EXPECTED_VALUE">^test a.*</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_Line3" enabled="true">
            <stringProp name="JSON_PATH">$.responseDetails.addresses[0].addressLine3</stringProp>
            <stringProp name="EXPECTED_VALUE">^test b.*</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_ActiveFlag" enabled="true">
            <stringProp name="JSON_PATH">$.responseDetails.addresses[0].active</stringProp>
            <stringProp name="EXPECTED_VALUE">True</stringProp>
            <boolProp name="JSONVALIDATION">false</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_City" enabled="true">
            <stringProp name="JSON_PATH">$.responseDetails.addresses[0].city</stringProp>
            <stringProp name="EXPECTED_VALUE">Mumbai</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
            <stringProp name="BeanShellAssertion.query">
///////////////////////////////////////////////////////////////////////

// Get the consumer ID extracted from the POST response
String postConsumerID = vars.get(&quot;consumerid&quot;);

// Get the consumer ID extracted from the GET response
String getConsumerID = vars.get(&quot;Consumer&quot;);

// Check if both consumer IDs are not null
if (postConsumerID != null &amp;&amp; getConsumerID != null) {
    // Check if the consumer IDs match
    if (postConsumerID.equals(getConsumerID)) {
        // Consumer IDs match, set Failure to false
        Failure = false;
        FailureMessage= &quot;ConsumerID  found&quot;;
    } else {
        // Consumer IDs don&apos;t match, set Failure to true
        Failure = true;
         FailureMessage= &quot;ConsumerID not found&quot;;
    }
} else {
    // One or both consumer IDs are null, set Failure to true
    Failure = true;
}
/////////////////////////////////////////////////////////////////

</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_EmailID_ActiveFalg" enabled="true">
            <stringProp name="JSON_PATH">$.responseDetails.emailAddresses.[?(@.usage == &apos;CONT_NO_USG_HOME&apos;)].active</stringProp>
            <stringProp name="EXPECTED_VALUE">True</stringProp>
            <boolProp name="JSONVALIDATION">false</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_EmailID_HomeUsage" enabled="true">
            <stringProp name="JSON_PATH">$.responseDetails.emailAddresses.[?(@.usage == &apos;CONT_NO_USG_HOME&apos;)].value</stringProp>
            <stringProp name="EXPECTED_VALUE">^tes\d{6}\.email@test\.at$</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_AdditionalInfo_Birthdate" enabled="true">
            <stringProp name="JSON_PATH">$.responseDetails.personDetails.dateOfBirth </stringProp>
            <stringProp name="EXPECTED_VALUE">1979-08-03T00:00:00</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_EmailID_BusinessUsage" enabled="true">
            <stringProp name="JSON_PATH">$.responseDetails.emailAddresses.[?(@.usage == &apos;CONT_NO_USG_BUSINESS&apos;)].value</stringProp>
            <stringProp name="EXPECTED_VALUE">^busin\d{6}s2\.email@test\.at$</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_ContactNumber_HomeUsage_ABCCC" enabled="false">
            <stringProp name="JSON_PATH">$.responseDetails.contactDetails[?(@.usage == &apos;CONT_NO_USG_HOME&apos;)].value</stringProp>
            <stringProp name="EXPECTED_VALUE">^\d+$</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_ContactNumber_MobileUsage" enabled="false">
            <stringProp name="JSON_PATH">$.responseDetails.contactDetails[?(@.usage == &apos;CONT_NO_USG_BUSINESS&apos;)].value</stringProp>
            <stringProp name="EXPECTED_VALUE">^\d+$</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_PersonInfo_EmployeerDetails" enabled="true">
            <stringProp name="JSON_PATH">$.responseDetails.personDetails.employer </stringProp>
            <stringProp name="EXPECTED_VALUE"> &quot;Coca Cola&quot;</stringProp>
            <boolProp name="JSONVALIDATION">false</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_PersonalInfo_SecondSurname" enabled="true">
            <stringProp name="JSON_PATH">$.responseDetails.personDetails.secondSurname </stringProp>
            <stringProp name="EXPECTED_VALUE">Jason</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_PersonalInfo_NoOfChildern" enabled="true">
            <stringProp name="JSON_PATH">$.responseDetails.personDetails.numberOfChildren</stringProp>
            <stringProp name="EXPECTED_VALUE">2</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_PersonalInfo_Gender" enabled="true">
            <stringProp name="JSON_PATH">$.responseDetails.personDetails.gender</stringProp>
            <stringProp name="EXPECTED_VALUE">Female</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="GRIP_KAFKA_Person_Entity" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">3</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Token" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">client_credentials</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">81c848ec-b50a-46a5-a09f-5488e36299fa</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">YGiEyCzrt0KvFKbsXklZUie5i5gOHCAu98txg686wcs=</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
              </elementProp>
              <elementProp name="scope" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">162d0933-e604-45e8-945b-6579ab2a868b/.default</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">scope</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/81fa766e-a349-4867-8bf4-ab35e250a08f/oauth2/v2.0/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json-patch+json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
              <stringProp name="Header.value">f17c8041cdbb43b290ff0c6e6350846e</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${Token}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Await-Consumer-Sync</stringProp>
              <stringProp name="Header.value">true</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random_Variable_for_Personal_ID" enabled="true">
          <stringProp name="variableName">Random_PersonalID</stringProp>
          <stringProp name="outputFormat">456781</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="maximumValue">567889900</stringProp>
          <stringProp name="randomSeed"></stringProp>
          <boolProp name="perThread">false</boolProp>
        </RandomVariableConfig>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random_Variable_for_BOD_ID" enabled="true">
          <stringProp name="variableName">Random_BOD_ID</stringProp>
          <stringProp name="outputFormat">355667-88665</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="maximumValue">345667777900</stringProp>
          <stringProp name="randomSeed"></stringProp>
          <boolProp name="perThread">false</boolProp>
        </RandomVariableConfig>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Transaction" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Generate_Random_Numbers" enabled="false">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">${__Random(00000,99999,RandVariable)}
${__Random(00000,99999,RandVariable1)}</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(50,500)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
            <stringProp name="URL"></stringProp>
            <stringProp name="RESULT_CLASS">org.apache.jmeter.samplers.SampleResult</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random_Variable_for_Alternative_ID" enabled="true">
            <stringProp name="variableName">Random_AlternativeID</stringProp>
            <stringProp name="outputFormat">45667-00009122</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="maximumValue">45666700777777</stringProp>
            <stringProp name="randomSeed"></stringProp>
            <boolProp name="perThread">false</boolProp>
          </RandomVariableConfig>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random_Variable_for_First_Name" enabled="true">
              <stringProp name="maximumValue">2000000</stringProp>
              <stringProp name="minimumValue">1</stringProp>
              <stringProp name="outputFormat">12345</stringProp>
              <boolProp name="perThread">false</boolProp>
              <stringProp name="randomSeed"></stringProp>
              <stringProp name="variableName">Random_PersonDetails</stringProp>
            </RandomVariableConfig>
            <hashTree/>
            <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random_Variable_for_Address" enabled="true">
              <stringProp name="variableName">Random_Address</stringProp>
              <stringProp name="outputFormat">877566</stringProp>
              <stringProp name="minimumValue">1</stringProp>
              <stringProp name="maximumValue">34998877655</stringProp>
              <stringProp name="randomSeed"></stringProp>
              <boolProp name="perThread">false</boolProp>
            </RandomVariableConfig>
            <hashTree/>
            <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable_for_PersonalDetail" enabled="true">
              <stringProp name="variableName">Random_PersonalDetails</stringProp>
              <stringProp name="outputFormat">1</stringProp>
              <stringProp name="minimumValue">1</stringProp>
              <stringProp name="maximumValue">9</stringProp>
              <stringProp name="randomSeed"></stringProp>
              <boolProp name="perThread">false</boolProp>
            </RandomVariableConfig>
            <hashTree/>
            <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
              <stringProp name="variableName">Random_Contact</stringProp>
              <stringProp name="outputFormat">9876543212</stringProp>
              <stringProp name="minimumValue">1</stringProp>
              <stringProp name="maximumValue">5678999</stringProp>
              <stringProp name="randomSeed"></stringProp>
              <boolProp name="perThread">false</boolProp>
            </RandomVariableConfig>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create_Update_SOAP_US" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns=&quot;http://gateway.consumerhub.commercial.volvocars.net/oagis&quot; xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;http://www.openapplications.org/oagis&quot;&gt;&#xd;
    &lt;SOAP-ENV:Body&gt;&#xd;
        &lt;UpdateConsumerAndOpportunityData_v1 xmlns:ns3=&quot;http://www.ford.com/oagis&quot;&gt;&#xd;
            &lt;ns1:ApplicationArea&gt;&#xd;
                &lt;ns1:Sender&gt;&#xd;
                    &lt;ns1:LogicalId&gt;Volvo&lt;/ns1:LogicalId&gt;&#xd;
                    &lt;ns1:Component&gt;RCXP&lt;/ns1:Component&gt;&#xd;
                    &lt;ns1:Task&gt;SyncConsumer&lt;/ns1:Task&gt;&#xd;
                    &lt;ns1:AuthorizationId&gt;Test_load&lt;/ns1:AuthorizationId&gt;&#xd;
                &lt;/ns1:Sender&gt;&#xd;
                &lt;ns1:CreationDateTime&gt;${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}&lt;/ns1:CreationDateTime&gt;&#xd;
                &lt;ns1:BODId&gt;loadtest-7cd7-${Random_BOD_ID}&lt;/ns1:BODId&gt;&#xd;
            &lt;/ns1:ApplicationArea&gt;&#xd;
            &lt;DataArea&gt;&#xd;
                &lt;Consumer&gt;&#xd;
                    &lt;Header&gt;&#xd;
                        &lt;Source&gt;US&lt;/Source&gt;&#xd;
                    &lt;/Header&gt;&#xd;
                    &lt;ConsumerDetails Category=&quot;Person&quot;&gt;&#xd;
                        &lt;ConsumerId&gt;&#xd;
                   &lt;Id Type=&quot;MyVolvoId&quot;&gt;loadtest-8161-${Random_AlternativeID}&lt;/Id&gt;&#xd;
                        &lt;/ConsumerId&gt;&#xd;
                        &lt;Language&gt;de&lt;/Language&gt;&#xd;
                        &lt;PersonDetails&gt;&#xd;
                            &lt;FirstName&gt;Tom${Random_PersonDetails}&lt;/FirstName&gt;&#xd;
                            &lt;Surname&gt;Cruise${Random_PersonDetails}&lt;/Surname&gt;&#xd;
                            &lt;SecondSurname&gt;Jason${Random_PersonalDetails}&lt;/SecondSurname&gt;&#xd;
                            &lt;Gender&gt;F&lt;/Gender&gt;&#xd;
                            &lt;Employer&gt;Coca Cola${Random_PersonalDetails}&lt;/Employer&gt;&#xd;
                            &lt;DateOfBirth&gt;1979-08-03&lt;/DateOfBirth&gt;&#xd;
                            &lt;MaritalStatus Type=&quot;description&quot;&gt;Married&lt;/MaritalStatus&gt;&#xd;
                            &lt;NumberOfChildren&gt;2&lt;/NumberOfChildren&gt;&#xd;
                            &lt;PersonalId&gt;${Random_PersonalID}&lt;/PersonalId&gt;&#xd;
                            &lt;ProtectedIdentity/&gt;&#xd;
                        &lt;/PersonDetails&gt;&#xd;
                        &lt;Address Main=&quot;true&quot; Type=&quot;ADDR_HOME&quot;&gt;&#xd;
                            &lt;Line1&gt;916 West Burbank${Random_Address} 112&lt;/Line1&gt;&#xd;
                            &lt;Line2&gt;916 West Burbank${Random_Address} 13333&lt;/Line2&gt;&#xd;
                            &lt;Line3&gt;Street${Random_Address}&lt;/Line3&gt;&#xd;
                            &lt;Line4&gt;Street${Random_Address}&lt;/Line4&gt;&#xd;
                            &lt;PostalCodeNumber&gt;${Random_PersonalDetails}&lt;/PostalCodeNumber&gt;&#xd;
                            &lt;City&gt;Zurich${Random_Address}&lt;/City&gt;&#xd;
                            &lt;AdministrativeArea&gt;TT${Random_PersonalDetails}&lt;/AdministrativeArea&gt;&#xd;
                            &lt;Country&gt;SE&lt;/Country&gt;&#xd;
                        &lt;/Address&gt;&#xd;
                         &lt;ContactNumber Active=&quot;true&quot; Type=&quot;CONT_MED_PHONE&quot; Usage=&quot;CONT_NO_USG_HOME&quot;&gt;5677${Random_PersonalDetails}&lt;/ContactNumber&gt;&#xd;
                        &lt;ContactNumber Active=&quot;true&quot; Type=&quot;CONT_MED_PHONE&quot; Usage=&quot;CONT_NO_USG_MOBILE&quot;&gt;90043${Random_PersonalDetails}&lt;/ContactNumber&gt;&#xd;
                        &lt;EmailAddress Active=&quot;true&quot; Usage=&quot;CONT_NO_USG_HOME&quot;&gt;tes${Random_PersonalDetails}.email@test.com&lt;/EmailAddress&gt;&#xd;
                        &lt;EmailAddress Active=&quot;true&quot; Usage=&quot;CONT_NO_USG_BUSINESS&quot;&gt;Busin${Random_PersonalDetails}s2.email@test.com&lt;/EmailAddress&gt;&#xd;
                        &lt;ContactPreference Type=&quot;CONT_PREF_DIRECT_MAIL&quot;&gt;Positive&lt;/ContactPreference&gt;&#xd;
                        &lt;ContactPreference Type=&quot;CONT_PREF_EMAIL&quot;&gt;Positive&lt;/ContactPreference&gt;&#xd;
                        &lt;ContactPreference Type=&quot;CONT_PREF_PHONE&quot;&gt;Negative&lt;/ContactPreference&gt;&#xd;
                        &lt;ContactPreference Type=&quot;CONT_PREF_SMS&quot;&gt;Positive&lt;/ContactPreference&gt;&#xd;
                        &lt;PartnerRelation Type=&quot;PARTN_CUST_REL_SELL_DEALER&quot;&gt;&#xd;
                            &lt;Partner&gt;&#xd;
                                &lt;Prefix&gt;D&lt;/Prefix&gt;&#xd;
                                &lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
                                &lt;PartnerId&gt;9825&lt;/PartnerId&gt;&#xd;
                            &lt;/Partner&gt;&#xd;
                            &lt;StartDate&gt;2017-03-01&lt;/StartDate&gt;&#xd;
                        &lt;/PartnerRelation&gt;&#xd;
                        &lt;VehicleRelation Type=&quot;Owns&quot;&gt;&#xd;
                            &lt;StartDate&gt;2017-03-02&lt;/StartDate&gt;&#xd;
                            &lt;Vehicle Category=&quot;Volvo&quot;&gt;&#xd;
                                &lt;Id Type=&quot;VIN&quot;&gt;${VIN}&lt;/Id&gt;&#xd;
                            &lt;/Vehicle&gt;&#xd;
                        &lt;/VehicleRelation&gt;&#xd;
                       &#xd;
                     &lt;/ConsumerDetails&gt;&#xd;
                &lt;/Consumer&gt;&#xd;
            &lt;/DataArea&gt;&#xd;
        &lt;/UpdateConsumerAndOpportunityData_v1&gt;&#xd;
    &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">cdb-qa.icpqa.volvocars.biz</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ConsumerhubGatewayWeb/UpdateConsumerAndOpportunityDataService_v1</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">vts_CDB_QA=eyJraWQiOiJOZUl6c0UyMWQ1bjFfclBPbTh5WS10Tm8yQzBDY0ZtVzRWZ0d3aEtnTWwwIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJ0b2tlbl90eXBlIjoiQmVhcmVyIiwiYXVkIjoiQ0RCX1FBIiwic3ViIjoicF9jZGJxYSIsImZpcnN0TmFtZSI6InBfY2RicWEiLCJsYXN0TmFtZSI6InBfY2RicWEiLCJncm91cHMiOltdLCJ2dGkiOiI2MmFmYTUwNC1jNWM0LTQ1NWItYjM1Zi1iMWUzN2E2MzQ0NzkiLCJjZHNpZCI6InBfY2RicWEiLCJpc3MiOiJ2b2x2b2NhcnMiLCJleHAiOjE3NDc5MTIxOTAsImlhdCI6MTcxNjM3NjE5MH0.srg472ihBOR0XfXY1Vss099g2QpZS6_ud5N139i2owIL5MP1f2XZASl35wk46HzP4RAncIfwq1DeSBLLoEUXUGEZHXvm2nGQeG5JCfw69Lbyv6CfmG1irr3hasORtX-PTVbMFTowvOmMU-jkgNMZ9Nx_-ZBxrQWKMSCtubDsn_vL3iYqGfweSQv4vYhaLzNQ1jFmcoK4yZ_-j366e3sceQzYLFRTG4kMM-ARbMOXpwbruJzkbX8qlwq54THIM7a8i25HRMC6rEX3b4RjeIrmNUhJLcBhtzyoAaJgwjZFAM0LL1br-HuQSEc8ZVod8fZ9a793RXAJUPUDSC8DVcWq7GkkJMhauke3pRNljkIEac-Xoq-UgdnEpUYzz0yC7MWJv3EfxPK2PP-fpHcnzAJUlbPTyoKYZylsGgqQ7BYdJNc1GxhpKb-PbbEIsah9SNzi_nXfEflIxBLpIvIkgIJf7GEhi8UjlpDZkVXiGPzJiNDw200jJubQHqfIYqLIoDkSJuqhVS135gehxd3udWdQReYSTaxBN7R6z6kC6R3uExU3pfQh0E6R44Lzu1lFaSJZHhIbsMRo2cOMptXrKkAeHe_pLhDdrWq1bTfqsRrcpxngc08K6ZKVcPu0Az11_Mat1f-kQTiAQU6u1H4X_MgRByhQMDdDE8TSLBQHm9ITDag</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default"></stringProp>
                <stringProp name="XPathExtractor.refname">consumerid</stringProp>
                <stringProp name="XPathExtractor.matchNumber">1</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//*[local-name()=&apos;Envelope&apos;]/*[local-name()=&apos;Body&apos;]//*[local-name()=&apos;ConsumerId&apos;]/*[local-name()=&apos;Id&apos; and @Type=&apos;ConsumerId&apos;]/text() </stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">C:/JMeter/Jmeter/apache-jmeter-5.4.1/bin/VIN_grip.csv</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="variableNames">VIN</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <stringProp name="delimiter"></stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetConsumerByConsumer_ID" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">gw.qa.partner.api.volvocars.biz</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/consumer/consumerIds/${consumerid}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">3000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="161310165">${consumerid}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_firstName" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.personDetails.firstName</stringProp>
                <stringProp name="EXPECTED_VALUE">Tom${Random_PersonDetails}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_Surname" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.personDetails.surname</stringProp>
                <stringProp name="EXPECTED_VALUE">Cruise${Random_PersonDetails}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_AlternativeID_MyVolvoID" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.alternativeConsumerIds[?(@.type == &apos;ALT_ID_MY_VOLVO_ID&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">${Random_AlternativeID}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_AlternativeFalg_MyVolvoID" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.alternativeConsumerIds[?(@.type == &apos;ALT_ID_MY_VOLVO_ID&apos;)].active</stringProp>
                <stringProp name="EXPECTED_VALUE">True</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_Line1" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].addressLine1</stringProp>
                <stringProp name="EXPECTED_VALUE">916 West Burbank${Random_Address} 112</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_Line2" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].addressLine2</stringProp>
                <stringProp name="EXPECTED_VALUE">^Blvd., Suite${Random_Address}*</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_Line3" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].addressLine3</stringProp>
                <stringProp name="EXPECTED_VALUE">^206C, Burbank${Random_Address}*</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_Line4" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].addressLine4</stringProp>
                <stringProp name="EXPECTED_VALUE">^CA 91506, USA${Random_Address}*</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_Additionalinfo_PersonalID" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.personDetails.personalId </stringProp>
                <stringProp name="EXPECTED_VALUE">${Random_PersonalID}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_ActiveFlag" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].active</stringProp>
                <stringProp name="EXPECTED_VALUE">True</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_City" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].city</stringProp>
                <stringProp name="EXPECTED_VALUE">Zurich${Random_Address}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_AdditionalInfo_MartialStatus" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.personDetails.maritalStatus</stringProp>
                <stringProp name="EXPECTED_VALUE">Married</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_AdditionalInfo_Birthdate" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.personDetails.dateOfBirth </stringProp>
                <stringProp name="EXPECTED_VALUE">1979-08-03T00:00:00Z</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-CreatedByComponent" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.sourceCode.createdBy</stringProp>
                <stringProp name="EXPECTED_VALUE">OM</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-UpdatedByComponent" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.sourceCode.updatedBy</stringProp>
                <stringProp name="EXPECTED_VALUE">+OM</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-ConsumerCateogry" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.consumerInfo.consumerCategory</stringProp>
                <stringProp name="EXPECTED_VALUE">Person</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Employeer" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.personDetails.employer</stringProp>
                <stringProp name="EXPECTED_VALUE">Coca Cola${Random_PersonalDetails}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-DBValue" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.isFromNewDb</stringProp>
                <stringProp name="EXPECTED_VALUE">true</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-VIN_Details" enabled="false">
                <stringProp name="JSON_PATH">$.responseDetails.vehicleRelations[0].vehicle.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${VIN}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-SecondSurname" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.personDetails.secondSurname</stringProp>
                <stringProp name="EXPECTED_VALUE">Jason${Random_PersonalDetails}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-District" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].district</stringProp>
                <stringProp name="EXPECTED_VALUE">TT${Random_PersonalDetails}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-PostalCode" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].postalCodeNumber</stringProp>
                <stringProp name="EXPECTED_VALUE">${Random_PersonalDetails}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-AddressActiveFlag" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].active</stringProp>
                <stringProp name="EXPECTED_VALUE">true</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-HomeEmail" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.emailAddresses.[?(@.usage == &apos;CONT_NO_USG_HOME&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">tes${Random_PersonalDetails}.email@test.com</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-HomeEmailActiveFlag" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.emailAddresses.[?(@.usage == &apos;CONT_NO_USG_HOME&apos;)].active</stringProp>
                <stringProp name="EXPECTED_VALUE">true</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-BusinessEmail" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.emailAddresses.[?(@.usage == &apos;CONT_NO_USG_BUSINESS&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">Busin${Random_PersonalDetails}s2.email@test.com</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-BusinessEmailActiveFlag" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.emailAddresses.[?(@.usage == &apos;CONT_NO_USG_BUSINESS&apos;)].active</stringProp>
                <stringProp name="EXPECTED_VALUE">true</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-HomeContact" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.contactDetails..[?(@.usage == &apos;CONT_NO_USG_HOME&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">${Random_Contact}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-MobileContact" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.contactDetails..[?(@.usage == &apos;CONT_NO_USG_MOBILE&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">${Random_Contact}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-MobileActiveFlag" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.contactDetails..[?(@.usage == &apos;CONT_NO_USG_MOBILE&apos;)].active</stringProp>
                <stringProp name="EXPECTED_VALUE">true</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-HomeActiveFlag" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.contactDetails..[?(@.usage == &apos;CONT_NO_USG_HOME&apos;)].active</stringProp>
                <stringProp name="EXPECTED_VALUE">true</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-AddresCountry" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].country</stringProp>
                <stringProp name="EXPECTED_VALUE">SE</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_Contact_Prefrence_Email_value" enabled="false">
                <stringProp name="JSON_PATH">$.responseDetails.contactPreferences[?(@.type == &apos;CONT_PREF_EMAIL&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">Positive</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_contact_Prefrence_Phone" enabled="false">
                <stringProp name="JSON_PATH">$.responseDetails.contactPreferences[?(@.type == &apos;CONT_PREF_PHONE&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">Negative</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create_Update_SOAP_DE" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns=&quot;http://gateway.consumerhub.commercial.volvocars.net/oagis&quot; xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;http://www.openapplications.org/oagis&quot;&gt;&#xd;
    &lt;SOAP-ENV:Body&gt;&#xd;
        &lt;UpdateConsumerAndOpportunityData_v1 xmlns:ns3=&quot;http://www.ford.com/oagis&quot;&gt;&#xd;
            &lt;ns1:ApplicationArea&gt;&#xd;
                &lt;ns1:Sender&gt;&#xd;
                    &lt;ns1:LogicalId&gt;Volvo&lt;/ns1:LogicalId&gt;&#xd;
                    &lt;ns1:Component&gt;OM&lt;/ns1:Component&gt;&#xd;
                    &lt;ns1:Task&gt;SyncConsumer&lt;/ns1:Task&gt;&#xd;
                    &lt;ns1:AuthorizationId&gt;rosh0990000&lt;/ns1:AuthorizationId&gt;&#xd;
                &lt;/ns1:Sender&gt;&#xd;
                &lt;ns1:CreationDateTime&gt;${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}&lt;/ns1:CreationDateTime&gt;&#xd;
                &lt;ns1:BODId&gt;loadtest-7cd7-${Random_BOD_ID}&lt;/ns1:BODId&gt;&#xd;
            &lt;/ns1:ApplicationArea&gt;&#xd;
            &lt;DataArea&gt;&#xd;
                &lt;Consumer&gt;&#xd;
                    &lt;Header&gt;&#xd;
                        &lt;Source&gt;DE&lt;/Source&gt;&#xd;
                    &lt;/Header&gt;&#xd;
                    &lt;ConsumerDetails Category=&quot;Person&quot;&gt;&#xd;
                        &lt;ConsumerId&gt;&#xd;
                   &lt;Id Type=&quot;MyVolvoId&quot;&gt;loadtest-8161-${Random_AlternativeID}&lt;/Id&gt;&#xd;
                        &lt;/ConsumerId&gt;&#xd;
                        &lt;Language&gt;de&lt;/Language&gt;&#xd;
                        &lt;PersonDetails&gt;&#xd;
                            &lt;FirstName&gt;Tom${Random_PersonDetails}&lt;/FirstName&gt;&#xd;
                            &lt;Surname&gt;Cruise${Random_PersonDetails}&lt;/Surname&gt;&#xd;
                            &lt;SecondSurname&gt;Jason${Random_PersonalDetails}&lt;/SecondSurname&gt;&#xd;
                            &lt;Gender&gt;F&lt;/Gender&gt;&#xd;
                            &lt;Employer&gt;Coca Cola${Random_PersonalDetails}&lt;/Employer&gt;&#xd;
                            &lt;DateOfBirth&gt;1979-08-03&lt;/DateOfBirth&gt;&#xd;
                            &lt;MaritalStatus Type=&quot;description&quot;&gt;Married&lt;/MaritalStatus&gt;&#xd;
                            &lt;NumberOfChildren&gt;2&lt;/NumberOfChildren&gt;&#xd;
                            &lt;PersonalId&gt;${Random_PersonalID}&lt;/PersonalId&gt;&#xd;
                            &lt;ProtectedIdentity/&gt;&#xd;
                        &lt;/PersonDetails&gt;&#xd;
                        &lt;Address Main=&quot;true&quot; Type=&quot;ADDR_HOME&quot;&gt;&#xd;
                            &lt;Line1&gt;916 West Burbank${Random_Address} 112&lt;/Line1&gt;&#xd;
                            &lt;Line2&gt;916 West Burbank${Random_Address} 13333&lt;/Line2&gt;&#xd;
                            &lt;Line3&gt;Street${Random_Address}&lt;/Line3&gt;&#xd;
                            &lt;Line4&gt;Street${Random_Address}&lt;/Line4&gt;&#xd;
                            &lt;PostalCodeNumber&gt;${Random_PersonalDetails}&lt;/PostalCodeNumber&gt;&#xd;
                            &lt;City&gt;Zurich${Random_Address}&lt;/City&gt;&#xd;
                            &lt;AdministrativeArea&gt;TT${Random_PersonalDetails}&lt;/AdministrativeArea&gt;&#xd;
                            &lt;Country&gt;SE&lt;/Country&gt;&#xd;
                        &lt;/Address&gt;&#xd;
                        &lt;EmailAddress Active=&quot;true&quot; Usage=&quot;CONT_NO_USG_HOME&quot;&gt;tes${Random_PersonalDetails}.email@test.com&lt;/EmailAddress&gt;&#xd;
                        &lt;EmailAddress Active=&quot;true&quot; Usage=&quot;CONT_NO_USG_BUSINESS&quot;&gt;Busin${Random_PersonalDetails}s2.email@test.com&lt;/EmailAddress&gt;&#xd;
                        &lt;ContactPreference Type=&quot;CONT_PREF_DIRECT_MAIL&quot;&gt;Positive&lt;/ContactPreference&gt;&#xd;
                        &lt;ContactPreference Type=&quot;CONT_PREF_EMAIL&quot;&gt;Positive&lt;/ContactPreference&gt;&#xd;
                        &lt;ContactPreference Type=&quot;CONT_PREF_PHONE&quot;&gt;Negative&lt;/ContactPreference&gt;&#xd;
                        &lt;ContactPreference Type=&quot;CONT_PREF_SMS&quot;&gt;Positive&lt;/ContactPreference&gt;&#xd;
                        &lt;PartnerRelation Type=&quot;PARTN_CUST_REL_SELL_DEALER&quot;&gt;&#xd;
                            &lt;Partner&gt;&#xd;
                                &lt;Prefix&gt;D&lt;/Prefix&gt;&#xd;
                                &lt;CountryCode&gt;DE&lt;/CountryCode&gt;&#xd;
                                &lt;PartnerId&gt;9999&lt;/PartnerId&gt;&#xd;
                            &lt;/Partner&gt;&#xd;
                            &lt;StartDate&gt;2017-03-01&lt;/StartDate&gt;&#xd;
                        &lt;/PartnerRelation&gt;&#xd;
                        &lt;VehicleRelation Type=&quot;Owns&quot;&gt;&#xd;
                            &lt;StartDate&gt;2017-03-02&lt;/StartDate&gt;&#xd;
                            &lt;Vehicle Category=&quot;Volvo&quot;&gt;&#xd;
                                &lt;Id Type=&quot;VIN&quot;&gt;${VIN}&lt;/Id&gt;&#xd;
                            &lt;/Vehicle&gt;&#xd;
                        &lt;/VehicleRelation&gt;&#xd;
                    &lt;/ConsumerDetails&gt;&#xd;
                &lt;/Consumer&gt;&#xd;
            &lt;/DataArea&gt;&#xd;
        &lt;/UpdateConsumerAndOpportunityData_v1&gt;&#xd;
    &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">cdb-qa.icpqa.volvocars.biz</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ConsumerhubGatewayWeb/UpdateConsumerAndOpportunityDataService_v1</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">vts_CDB_QA=eyJraWQiOiJOZUl6c0UyMWQ1bjFfclBPbTh5WS10Tm8yQzBDY0ZtVzRWZ0d3aEtnTWwwIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJ0b2tlbl90eXBlIjoiQmVhcmVyIiwiYXVkIjoiQ0RCX1FBIiwic3ViIjoicF9jZGJxYSIsImZpcnN0TmFtZSI6InBfY2RicWEiLCJsYXN0TmFtZSI6InBfY2RicWEiLCJncm91cHMiOltdLCJ2dGkiOiI2MmFmYTUwNC1jNWM0LTQ1NWItYjM1Zi1iMWUzN2E2MzQ0NzkiLCJjZHNpZCI6InBfY2RicWEiLCJpc3MiOiJ2b2x2b2NhcnMiLCJleHAiOjE3NDc5MTIxOTAsImlhdCI6MTcxNjM3NjE5MH0.srg472ihBOR0XfXY1Vss099g2QpZS6_ud5N139i2owIL5MP1f2XZASl35wk46HzP4RAncIfwq1DeSBLLoEUXUGEZHXvm2nGQeG5JCfw69Lbyv6CfmG1irr3hasORtX-PTVbMFTowvOmMU-jkgNMZ9Nx_-ZBxrQWKMSCtubDsn_vL3iYqGfweSQv4vYhaLzNQ1jFmcoK4yZ_-j366e3sceQzYLFRTG4kMM-ARbMOXpwbruJzkbX8qlwq54THIM7a8i25HRMC6rEX3b4RjeIrmNUhJLcBhtzyoAaJgwjZFAM0LL1br-HuQSEc8ZVod8fZ9a793RXAJUPUDSC8DVcWq7GkkJMhauke3pRNljkIEac-Xoq-UgdnEpUYzz0yC7MWJv3EfxPK2PP-fpHcnzAJUlbPTyoKYZylsGgqQ7BYdJNc1GxhpKb-PbbEIsah9SNzi_nXfEflIxBLpIvIkgIJf7GEhi8UjlpDZkVXiGPzJiNDw200jJubQHqfIYqLIoDkSJuqhVS135gehxd3udWdQReYSTaxBN7R6z6kC6R3uExU3pfQh0E6R44Lzu1lFaSJZHhIbsMRo2cOMptXrKkAeHe_pLhDdrWq1bTfqsRrcpxngc08K6ZKVcPu0Az11_Mat1f-kQTiAQU6u1H4X_MgRByhQMDdDE8TSLBQHm9ITDag</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default"></stringProp>
                <stringProp name="XPathExtractor.refname">consumerid</stringProp>
                <stringProp name="XPathExtractor.matchNumber">1</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//*[local-name()=&apos;Envelope&apos;]/*[local-name()=&apos;Body&apos;]//*[local-name()=&apos;ConsumerId&apos;]/*[local-name()=&apos;Id&apos; and @Type=&apos;ConsumerId&apos;]/text() </stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
              </XPathExtractor>
              <hashTree/>
            </hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion_for_ResponseCode" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response_Assertion_for_ConsumerID" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1827226577">ConsumerId</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create_Update_Consumer" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;brand&quot;: &quot;VCC&quot;,&#xd;
  &quot;component&quot;: &quot;RCXP&quot;,&#xd;
  &quot;authorizationId&quot;: &quot;rosh0990000&quot;,&#xd;
  &quot;bodId&quot;: &quot;loadtest-7cd7-${Random_BOD_ID}&quot;,&#xd;
  &quot;consumer&quot;: {&#xd;
    &quot;consumerInfo&quot;: {&#xd;
      &quot;consumerCategory&quot;: &quot;Person&quot;,&#xd;
      &quot;consumerLanguage&quot;: &quot;de&quot;,&#xd;
      &quot;creationDateTime&quot;: &quot;${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}&quot;,&#xd;
      &quot;market&quot;: &quot;US&quot;&#xd;
    },&#xd;
    &quot;alternativeConsumerId&quot;: [&#xd;
     &#xd;
      {&#xd;
        &quot;type&quot;: &quot;MyVolvoId&quot;,&#xd;
        &quot;value&quot;: &quot;loadtest-8161-${Random_AlternativeID}&quot;&#xd;
      }&#xd;
    ],&#xd;
 &#xd;
    &quot;person&quot;: {&#xd;
      &quot;dateOfBirth&quot;: &quot;1979-08-03&quot;,&#xd;
      &quot;employer&quot;: &quot;Coca Cola${Random_PersonalDetails}&quot;,&#xd;
      &quot;firstName&quot;: &quot;Tom${Random_PersonDetails}&quot;,&#xd;
      &quot;gender&quot;: &quot;F&quot;,&#xd;
     &#xd;
      &quot;maritalStatus&quot;: &quot;Married&quot;,&#xd;
      &quot;numberOfChildren&quot;: &quot;2&quot;,&#xd;
      &quot;personalId&quot;: &quot;${Random_PersonalID}&quot;,&#xd;
      &quot;secondSurname&quot;: &quot;Jason${Random_PersonalDetails}&quot;,&#xd;
      &quot;surname&quot;: &quot;Cruise${Random_PersonDetails}&quot;&#xd;
    },&#xd;
    &quot;address&quot;: [&#xd;
      {&#xd;
        &quot;addressLine1&quot;: &quot;916 West Burbank${Random_Address} 112&quot;,&#xd;
        &quot;addressLine2&quot;: &quot;Blvd., Suite${Random_Address}&quot;,&#xd;
         &quot;addressLine3&quot;: &quot;Street${Random_Address}&quot;,&#xd;
          &quot;addressLine4&quot;: &quot;Street${Random_Address}&quot;,&#xd;
        &quot;district&quot;: &quot;TT${Random_PersonalDetails}&quot;,&#xd;
        &quot;city&quot;: &quot;Zurich${Random_Address}&quot;,&#xd;
        &quot;country&quot;: &quot;SE&quot;,&#xd;
        &quot;main&quot;: &quot;true&quot;,&#xd;
        &quot;postalCodeNumber&quot;: &quot;${Random_PersonalDetails}&quot;,&#xd;
        &quot;type&quot;: &quot;ADDR_HOME&quot;&#xd;
      }&#xd;
    ],&#xd;
    &#xd;
    &quot;contactPreference&quot;: [&#xd;
      {&#xd;
        &quot;type&quot;: &quot;CONT_PREF_DIRECT_MAIL&quot;,&#xd;
        &quot;value&quot;: &quot;Positive&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;type&quot;: &quot;CONT_PREF_EMAIL&quot;,&#xd;
        &quot;value&quot;: &quot;Positive&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;type&quot;: &quot;CONT_PREF_PHONE&quot;,&#xd;
        &quot;value&quot;: &quot;Negative&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;type&quot;: &quot;CONT_PREF_SMS&quot;,&#xd;
        &quot;value&quot;: &quot;Positive&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;emailAddress&quot;: [&#xd;
      {&#xd;
        &quot;usage&quot;: &quot;CONT_NO_USG_HOME&quot;,&#xd;
        &quot;active&quot;: &quot;true&quot;,&#xd;
        &quot;value&quot;: &quot;tes${Random_PersonalDetails}.email@test.com&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;usage&quot;: &quot;CONT_NO_USG_BUSINESS&quot;,&#xd;
        &quot;active&quot;: &quot;true&quot;,&#xd;
        &quot;value&quot;: &quot;Busin${Random_PersonalDetails}s2.email@test.com&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;partnerRelation&quot;: [&#xd;
    {&#xd;
            &quot;countryCode&quot;: &quot;US&quot;,&#xd;
            &quot;partnerId&quot;: &quot;9825&quot;,&#xd;
            &quot;startDate&quot;: &quot;2017-03-01&quot;,&#xd;
            &quot;type&quot;: &quot;PARTN_CUST_REL_SELL_DEALER&quot;,&#xd;
            &quot;prefix&quot;: &quot;D&quot;&#xd;
        }&#xd;
    &#xd;
    ],&#xd;
    &quot;vehicleRelation&quot;: [&#xd;
    {&#xd;
            &quot;startDate&quot;: &quot;2017-03-02&quot;,&#xd;
            &quot;type&quot;: &quot;Owns&quot;,&#xd;
            &quot;vin&quot;: &quot;${VIN}&quot;&#xd;
        }&#xd;
     &#xd;
    ]&#xd;
     &#xd;
 &#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">emea-grip-api-apimanager-qa.azure-api.net</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">consumer</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor_for_ConsumerID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">consumerid</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.responseDetails.consumerId.id[?(@.type == &apos;ConsumerId&apos;)].value</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">emea-grip-apimanager-dms-qa</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename">C:\Jmeter\apache-jmeter-5.4.1\bin\Aggerate_GRIP_KAFKA4.csv</stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename">C:\Jmeter\apache-jmeter-5.4.1\bin\GRIP_KAFKA.csv</stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename">C:\Jmeter\apache-jmeter-5.4.1\bin\Summary_Grip_4.csv</stringProp>
            </ResultCollector>
            <hashTree/>
            <RandomOrderController guiclass="RandomOrderControllerGui" testclass="RandomOrderController" testname="Random Order Controller" enabled="false"/>
            <hashTree>
              <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <url>true</url>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
              <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <url>true</url>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
              <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <url>true</url>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
              <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <url>true</url>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename">Summary_GRIP_KAFKA.csv</stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable_for_Contact" enabled="true">
              <stringProp name="variableName">Random_Contact</stringProp>
              <stringProp name="outputFormat">2345467891</stringProp>
              <stringProp name="minimumValue">1</stringProp>
              <stringProp name="maximumValue">34566677771</stringProp>
              <stringProp name="randomSeed"></stringProp>
              <boolProp name="perThread">false</boolProp>
            </RandomVariableConfig>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Org_GRIP_KAFKA" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">2</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Token" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">client_credentials</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">81c848ec-b50a-46a5-a09f-5488e36299fa</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">YGiEyCzrt0KvFKbsXklZUie5i5gOHCAu98txg686wcs=</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
              </elementProp>
              <elementProp name="scope" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">162d0933-e604-45e8-945b-6579ab2a868b/.default</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">scope</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/81fa766e-a349-4867-8bf4-ab35e250a08f/oauth2/v2.0/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Await-Consumer-Sync</stringProp>
              <stringProp name="Header.value">false</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json-patch+json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
              <stringProp name="Header.value">f17c8041cdbb43b290ff0c6e6350846e</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${Token}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random_Variable_for_Alternative_ID" enabled="true">
          <stringProp name="variableName">Random_AlternativeID</stringProp>
          <stringProp name="outputFormat">4566700009122</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="maximumValue">45666700999</stringProp>
          <stringProp name="randomSeed"></stringProp>
          <boolProp name="perThread">false</boolProp>
        </RandomVariableConfig>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random_Variable_for_OrgDetails_ID" enabled="true">
          <stringProp name="variableName">Random_OrgDetails</stringProp>
          <stringProp name="outputFormat">456781</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="maximumValue">567889900</stringProp>
          <stringProp name="randomSeed"></stringProp>
          <boolProp name="perThread">false</boolProp>
        </RandomVariableConfig>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random_Variable_for_BOD_ID" enabled="true">
          <stringProp name="variableName">Random_BOD_ID</stringProp>
          <stringProp name="outputFormat">355667-88665</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="maximumValue">345667777900</stringProp>
          <stringProp name="randomSeed"></stringProp>
          <boolProp name="perThread">false</boolProp>
        </RandomVariableConfig>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="UpdateConsumer_ExactMatch" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Generate_Random_Numbers" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">${__Random(00000,99999,RandVariable)}
${__Random(00000,99999,RandVariable1)}</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(50,500)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
            <stringProp name="URL"></stringProp>
            <stringProp name="RESULT_CLASS">org.apache.jmeter.samplers.SampleResult</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random_Variable_for_Org" enabled="true">
              <stringProp name="maximumValue">2000000</stringProp>
              <stringProp name="minimumValue">1</stringProp>
              <stringProp name="outputFormat">12345</stringProp>
              <boolProp name="perThread">false</boolProp>
              <stringProp name="randomSeed"></stringProp>
              <stringProp name="variableName">Random_OrgDetials</stringProp>
            </RandomVariableConfig>
            <hashTree/>
            <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random_Variable_for_Address" enabled="true">
              <stringProp name="variableName">Random_Address</stringProp>
              <stringProp name="outputFormat">877566</stringProp>
              <stringProp name="minimumValue">1</stringProp>
              <stringProp name="maximumValue">34998877655</stringProp>
              <stringProp name="randomSeed"></stringProp>
              <boolProp name="perThread">false</boolProp>
            </RandomVariableConfig>
            <hashTree/>
            <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable_for_OrganisationDetail" enabled="true">
              <stringProp name="variableName">Random_OrganisationDetails</stringProp>
              <stringProp name="outputFormat">100900</stringProp>
              <stringProp name="minimumValue">1</stringProp>
              <stringProp name="maximumValue">900</stringProp>
              <stringProp name="randomSeed"></stringProp>
              <boolProp name="perThread">false</boolProp>
            </RandomVariableConfig>
            <hashTree/>
            <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable_Contact" enabled="true">
              <stringProp name="variableName">Random_Contact</stringProp>
              <stringProp name="outputFormat">9876543212</stringProp>
              <stringProp name="minimumValue">1</stringProp>
              <stringProp name="maximumValue">5006789990000</stringProp>
              <stringProp name="randomSeed"></stringProp>
              <boolProp name="perThread">false</boolProp>
            </RandomVariableConfig>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">C:/JMeter/Jmeter/apache-jmeter-5.4.1/bin/VIN_grip.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">VIN</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <stringProp name="delimiter"></stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SOAP-ENV:Envelope xmlns=&quot;http://gateway.consumerhub.commercial.volvocars.net/oagis&quot; xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;http://www.openapplications.org/oagis&quot;&gt;&#xd;
    &lt;SOAP-ENV:Body&gt;&#xd;
        &lt;UpdateConsumerAndOpportunityData_v1 xmlns:ns3=&quot;http://www.ford.com/oagis&quot;&gt;&#xd;
            &lt;ns1:ApplicationArea&gt;&#xd;
                &lt;ns1:Sender&gt;&#xd;
                    &lt;ns1:LogicalId&gt;Volvo&lt;/ns1:LogicalId&gt;&#xd;
                    &lt;ns1:Component&gt;OM&lt;/ns1:Component&gt;&#xd;
                    &lt;ns1:Task&gt;SyncConsumer&lt;/ns1:Task&gt;&#xd;
                    &lt;ns1:AuthorizationId&gt;CDSIDKOMP&lt;/ns1:AuthorizationId&gt;&#xd;
                &lt;/ns1:Sender&gt;&#xd;
                &lt;ns1:CreationDateTime&gt;2023-05-29T13:51:10Z&lt;/ns1:CreationDateTime&gt;&#xd;
                &lt;ns1:BODId&gt;254e44a7-355667-8866546695587&lt;/ns1:BODId&gt;&#xd;
            &lt;/ns1:ApplicationArea&gt;&#xd;
            &lt;DataArea&gt;&#xd;
                &lt;Consumer&gt;&#xd;
                    &lt;Header&gt;&#xd;
                        &lt;Source&gt;US&lt;/Source&gt;&#xd;
                    &lt;/Header&gt;&#xd;
                    &lt;ConsumerDetails Category=&quot;Organisation&quot;&gt;&#xd;
                        &lt;ConsumerId&gt;&#xd;
                            &lt;Id Type=&quot;FAM_ID&quot;&gt;loadtest-8161-${Random_AlternativeID}&lt;/Id&gt;&#xd;
                            &lt;Id Type=&quot;FIN&quot;&gt;${Random_AlternativeID}&lt;/Id&gt;&#xd;
                        &lt;/ConsumerId&gt;&#xd;
                        &lt;OrganisationDetails&gt;&#xd;
                            &lt;LegalName&gt;Volvo${Random_OrgDetials}&lt;/LegalName&gt;&#xd;
                            &lt;Turnover/&gt;&#xd;
                            &lt;Profit/&gt;&#xd;
                            &lt;OrganizationalId&gt;${Random_OrganisationDetails}&lt;/OrganizationalId&gt;&#xd;
                            &lt;VATId&gt;11${Random_OrganisationDetails}&lt;/VATId&gt;&#xd;
                        &lt;/OrganisationDetails&gt;&#xd;
                        &lt;Address Main=&quot;true&quot; Type=&quot;Business&quot;&gt;&#xd;
                            &lt;Line1&gt;916 West Burbank${Random_Address} 112&lt;/Line1&gt;&#xd;
                            &lt;Line2&gt;Blvd., Suite${Random_Address}&lt;/Line2&gt;&#xd;
                            &lt;Line3&gt;Queens Street${Random_Address}&lt;/Line3&gt;&#xd;
                            &lt;Line4&gt;USA Street${Random_Address}&lt;/Line4&gt;&#xd;
                            &lt;PostalCodeNumber&gt;122&lt;/PostalCodeNumber&gt;&#xd;
                            &lt;City&gt;Zurich${Random_Address}&lt;/City&gt;&#xd;
                            &lt;AdministrativeArea&gt;TT${Random_OrgDetails}&lt;/AdministrativeArea&gt;&#xd;
                            &lt;Country&gt;US&lt;/Country&gt;&#xd;
                        &lt;/Address&gt;&#xd;
                        &lt;ContactNumber Active=&quot;true&quot; Type=&quot;CONT_MED_PHONE&quot; Usage=&quot;CONT_NO_USG_HOME&quot;&gt;5677${Random_OrganisationDetails}&lt;/ContactNumber&gt;&#xd;
                        &lt;ContactNumber Active=&quot;true&quot; Type=&quot;CONT_MED_PHONE&quot; Usage=&quot;CONT_NO_USG_MOBILE&quot;&gt;90043${Random_OrganisationDetails}&lt;/ContactNumber&gt;&#xd;
                        &lt;EmailAddress Usage=&quot;CONT_NO_USG_HOME&quot;&gt;testhome${Random_OrganisationDetails}@volvocars.com&lt;/EmailAddress&gt;&#xd;
                        &lt;EmailAddress Usage=&quot;CONT_NO_USG_BUSINESS&quot;&gt;testbusiness${Random_OrganisationDetails}@volvocars.com&lt;/EmailAddress&gt;&#xd;
                        &#xd;
                        &lt;PartnerRelation Type=&quot;PARTN_CUST_REL_MISC_DEALER&quot;&gt;&#xd;
                            &lt;Partner&gt;&#xd;
                                &lt;Prefix&gt;D&lt;/Prefix&gt;&#xd;
                                &lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
                                &lt;PartnerId&gt;9825&lt;/PartnerId&gt;&#xd;
                            &lt;/Partner&gt;&#xd;
                            &lt;StartDate&gt;2023-05-29&lt;/StartDate&gt;&#xd;
                        &lt;/PartnerRelation&gt;&#xd;
                        &lt;VehicleRelation Type=&quot;Owns&quot;&gt;&#xd;
                            &lt;StartDate&gt;2017-03-02&lt;/StartDate&gt;&#xd;
                            &lt;Vehicle Category=&quot;Volvo&quot;&gt;&#xd;
                                &lt;Id Type=&quot;VIN&quot;&gt;${VIN}&lt;/Id&gt;&#xd;
                            &lt;/Vehicle&gt;&#xd;
                        &lt;/VehicleRelation&gt;&#xd;
                    &lt;/ConsumerDetails&gt;&#xd;
                &lt;/Consumer&gt;&#xd;
            &lt;/DataArea&gt;&#xd;
        &lt;/UpdateConsumerAndOpportunityData_v1&gt;&#xd;
    &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">cdb-qa.icpqa.volvocars.biz</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ConsumerhubGatewayWeb/UpdateConsumerAndOpportunityDataService_v1</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">vts_CDB_QA=eyJraWQiOiJOZUl6c0UyMWQ1bjFfclBPbTh5WS10Tm8yQzBDY0ZtVzRWZ0d3aEtnTWwwIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJ0b2tlbl90eXBlIjoiQmVhcmVyIiwiYXVkIjoiQ0RCX1FBIiwic3ViIjoicF9jZGJxYSIsImZpcnN0TmFtZSI6InBfY2RicWEiLCJsYXN0TmFtZSI6InBfY2RicWEiLCJncm91cHMiOltdLCJ2dGkiOiI2MmFmYTUwNC1jNWM0LTQ1NWItYjM1Zi1iMWUzN2E2MzQ0NzkiLCJjZHNpZCI6InBfY2RicWEiLCJpc3MiOiJ2b2x2b2NhcnMiLCJleHAiOjE3NDc5MTIxOTAsImlhdCI6MTcxNjM3NjE5MH0.srg472ihBOR0XfXY1Vss099g2QpZS6_ud5N139i2owIL5MP1f2XZASl35wk46HzP4RAncIfwq1DeSBLLoEUXUGEZHXvm2nGQeG5JCfw69Lbyv6CfmG1irr3hasORtX-PTVbMFTowvOmMU-jkgNMZ9Nx_-ZBxrQWKMSCtubDsn_vL3iYqGfweSQv4vYhaLzNQ1jFmcoK4yZ_-j366e3sceQzYLFRTG4kMM-ARbMOXpwbruJzkbX8qlwq54THIM7a8i25HRMC6rEX3b4RjeIrmNUhJLcBhtzyoAaJgwjZFAM0LL1br-HuQSEc8ZVod8fZ9a793RXAJUPUDSC8DVcWq7GkkJMhauke3pRNljkIEac-Xoq-UgdnEpUYzz0yC7MWJv3EfxPK2PP-fpHcnzAJUlbPTyoKYZylsGgqQ7BYdJNc1GxhpKb-PbbEIsah9SNzi_nXfEflIxBLpIvIkgIJf7GEhi8UjlpDZkVXiGPzJiNDw200jJubQHqfIYqLIoDkSJuqhVS135gehxd3udWdQReYSTaxBN7R6z6kC6R3uExU3pfQh0E6R44Lzu1lFaSJZHhIbsMRo2cOMptXrKkAeHe_pLhDdrWq1bTfqsRrcpxngc08K6ZKVcPu0Az11_Mat1f-kQTiAQU6u1H4X_MgRByhQMDdDE8TSLBQHm9ITDag</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default"></stringProp>
                <stringProp name="XPathExtractor.refname">consumerid</stringProp>
                <stringProp name="XPathExtractor.matchNumber">1</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//*[local-name()=&apos;Envelope&apos;]/*[local-name()=&apos;Body&apos;]//*[local-name()=&apos;ConsumerId&apos;]/*[local-name()=&apos;Id&apos; and @Type=&apos;ConsumerId&apos;]/text() </stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1827226577">ConsumerId</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET  Request" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">gw.qa.partner.api.volvocars.biz</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/consumer/consumerIds/${consumerid}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">3000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="161310165">${consumerid}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_OrgName" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.organizationDetails.legalName</stringProp>
                <stringProp name="EXPECTED_VALUE">Volvo${Random_OrgDetials}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_AlterantiveID_FIN" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.alternativeConsumerIds[?(@.type == &apos;ALT_ID_FIN&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">${Random_AlternativeID}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_AlternativeFalg_FIN" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.alternativeConsumerIds[?(@.type == &apos;ALT_ID_FIN&apos;)].active</stringProp>
                <stringProp name="EXPECTED_VALUE">True</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_AlternativeID_MyVolvoID" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.alternativeConsumerIds[?(@.type == &apos;ALT_ID_FAM_ID&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">loadtest-8161-${Random_AlternativeID}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_AlternativeFalg_MyVolvoID" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.alternativeConsumerIds[?(@.type == &apos;ALT_ID_MY_VOLVO_ID&apos;)].active</stringProp>
                <stringProp name="EXPECTED_VALUE">True</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_Line1" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].addressLine1</stringProp>
                <stringProp name="EXPECTED_VALUE">916 West Burbank${Random_Address} 112</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_Line2" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].addressLine2</stringProp>
                <stringProp name="EXPECTED_VALUE">^Blvd., Suite${Random_Address}*</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_Line3" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].addressLine3</stringProp>
                <stringProp name="EXPECTED_VALUE">Queens Street${Random_Address}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_Line4" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].addressLine4</stringProp>
                <stringProp name="EXPECTED_VALUE">USA Street${Random_Address}*</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_Additionalinfo_OrganisationlID" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.organizationDetails.organizationalId</stringProp>
                <stringProp name="EXPECTED_VALUE">${Random_OrganisationDetails}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_ActiveFlag" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].active</stringProp>
                <stringProp name="EXPECTED_VALUE">True</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_City" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].city</stringProp>
                <stringProp name="EXPECTED_VALUE">Zurich${Random_Address}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_PartnerCountryCode" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.partnerRelations[0].partner.countryCode</stringProp>
                <stringProp name="EXPECTED_VALUE">US</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_PartnerType" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.partnerRelations[0].type</stringProp>
                <stringProp name="EXPECTED_VALUE">PARTN_CUST_REL_MISC_DEALER</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-CreatedByComponent" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.sourceCode.createdBy</stringProp>
                <stringProp name="EXPECTED_VALUE">OM</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-UpdatedByComponent" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.sourceCode.updatedBy</stringProp>
                <stringProp name="EXPECTED_VALUE">+OM</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-ConsumerCateogry" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.consumerInfo.consumerCategory</stringProp>
                <stringProp name="EXPECTED_VALUE">Organisation</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-VATID" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.organizationDetails.vatId</stringProp>
                <stringProp name="EXPECTED_VALUE">11${Random_OrganisationDetails}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-ProfitCurrency" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.organizationDetails.profitCurrency</stringProp>
                <stringProp name="EXPECTED_VALUE">EUR</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-turnoverCurrency" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.organizationDetails.turnoverCurrency</stringProp>
                <stringProp name="EXPECTED_VALUE">EUR</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-PartnerID" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.partnerRelations[0].partner.partnerId </stringProp>
                <stringProp name="EXPECTED_VALUE">9825</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-District" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].district</stringProp>
                <stringProp name="EXPECTED_VALUE">TT${Random_OrgDetails}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-DBvalue" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.isFromNewDb</stringProp>
                <stringProp name="EXPECTED_VALUE">true</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-AddressActiveFlag" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].active</stringProp>
                <stringProp name="EXPECTED_VALUE">true</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-HomeEmail" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.emailAddresses.[?(@.usage == &apos;CONT_NO_USG_HOME&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">testhome${Random_OrganisationDetails}@volvocars.com</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-HomeEmailActiveFlag" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.emailAddresses.[?(@.usage == &apos;CONT_NO_USG_HOME&apos;)].active</stringProp>
                <stringProp name="EXPECTED_VALUE">true</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-BusinessEmail" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.emailAddresses.[?(@.usage == &apos;CONT_NO_USG_BUSINESS&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">testbusiness${Random_OrganisationDetails}@volvocars.com</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-BusinessEmailActiveFlag" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.emailAddresses.[?(@.usage == &apos;CONT_NO_USG_BUSINESS&apos;)].active</stringProp>
                <stringProp name="EXPECTED_VALUE">true</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-HomeContact" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.contactDetails..[?(@.usage == &apos;CONT_NO_USG_HOME&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">5677${Random_OrganisationDetails}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-MobileContact" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.contactDetails..[?(@.usage == &apos;CONT_NO_USG_MOBILE&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">90043${Random_OrganisationDetails}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-MobileActiveFlag" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.contactDetails..[?(@.usage == &apos;CONT_NO_USG_MOBILE&apos;)].active</stringProp>
                <stringProp name="EXPECTED_VALUE">true</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-HomeActiveFlag" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.contactDetails..[?(@.usage == &apos;CONT_NO_USG_HOME&apos;)].active</stringProp>
                <stringProp name="EXPECTED_VALUE">true</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-AddresCountry" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].country</stringProp>
                <stringProp name="EXPECTED_VALUE">US</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_Contact_Prefrence_Email_value" enabled="false">
                <stringProp name="JSON_PATH">$.responseDetails.contactPreferences[?(@.type == &apos;CONT_PREF_EMAIL&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">Positive</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_contact_Prefrence_Phone" enabled="false">
                <stringProp name="JSON_PATH">$.responseDetails.contactPreferences[?(@.type == &apos;CONT_PREF_PHONE&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">Negative</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename">Summary_GRIP_KAFKA.csv</stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="false">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename">C:\Jmeter\apache-jmeter-5.4.1\bin\GRIP_KAFKA.csv</stringProp>
            </ResultCollector>
            <hashTree/>
            <RandomOrderController guiclass="RandomOrderControllerGui" testclass="RandomOrderController" testname="Random Order Controller" enabled="false"/>
            <hashTree>
              <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <url>true</url>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
              <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <url>true</url>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
              <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <url>true</url>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="New_Person_GRIP" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">2</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Await-Consumer-Sync</stringProp>
              <stringProp name="Header.value">true</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json-patch+json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
              <stringProp name="Header.value">f17c8041cdbb43b290ff0c6e6350846e</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6InEtMjNmYWxldlpoaEQzaG05Q1Fia1A1TVF5VSIsImtpZCI6InEtMjNmYWxldlpoaEQzaG05Q1Fia1A1TVF5VSJ9.eyJhdWQiOiIxNjJkMDkzMy1lNjA0LTQ1ZTgtOTQ1Yi02NTc5YWIyYTg2OGIiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC84MWZhNzY2ZS1hMzQ5LTQ4NjctOGJmNC1hYjM1ZTI1MGEwOGYvIiwiaWF0IjoxNzEyNTY2MjI3LCJuYmYiOjE3MTI1NjYyMjcsImV4cCI6MTcxMjU3MDEyNywiYWlvIjoiRTJOZ1lMaVQ3R25vbk16OElLSm5DNC92am1sYkFRPT0iLCJhcHBpZCI6IjgxYzg0OGVjLWI1MGEtNDZhNS1hMDlmLTU0ODhlMzYyOTlmYSIsImFwcGlkYWNyIjoiMSIsImlkcCI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzgxZmE3NjZlLWEzNDktNDg2Ny04YmY0LWFiMzVlMjUwYTA4Zi8iLCJvaWQiOiJiNThiN2NkZS0zYzIyLTQ0OTktYTg5OS0xMzdlZDA3NThlMzUiLCJyaCI6IjAuQVF3QWJuYjZnVW1qWjBpTDlLczE0bENnanpNSkxSWUU1dWhGbEZ0bGVhc3Fob3NNQUFBLiIsInN1YiI6ImI1OGI3Y2RlLTNjMjItNDQ5OS1hODk5LTEzN2VkMDc1OGUzNSIsInRpZCI6IjgxZmE3NjZlLWEzNDktNDg2Ny04YmY0LWFiMzVlMjUwYTA4ZiIsInV0aSI6Im5CVEM2N2I3UEVXOFNDUWNEQTloQUEiLCJ2ZXIiOiIxLjAifQ.Br9gSwBgo4qqbgHa9l4FpemsK0ovk4WMtn62IgB5ia7Iw5QOuiP0GY4txfiXt6N6l2eHYjCj6hXAMLVi1MiU4TDuNGYlctr8D7tYf0bcPsDov5JHUMbaE-sVZuBKHZuObfvw4KxN4Be-lmceIo7uLwI8QA8we__yG0zJk7q04i5Aw9ArmKdPj2we9PHQralQav0wkbivzPIRHBRBCZ7LNBM-fVVCLsd4wJzkLJuuoeQlr0y3jRZInBUo3uy5j7sWpzkdQfLKpHZzcokiOzgBMtDhFg4gqa2GPMcrJdCdJ5P-b5ROrmKzSP1hcVu2qsd0q1A5zibJXlUHQgJ0nfCU-w</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random_Variable_for_Alternative_ID" enabled="true">
          <stringProp name="variableName">Random_AlternativeID</stringProp>
          <stringProp name="outputFormat">45667-00009-122</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="maximumValue">45666700</stringProp>
          <stringProp name="randomSeed"></stringProp>
          <boolProp name="perThread">false</boolProp>
        </RandomVariableConfig>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random_Variable_for_Personal_ID" enabled="true">
          <stringProp name="variableName">Random_PersonalID</stringProp>
          <stringProp name="outputFormat">456781</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="maximumValue">567889900</stringProp>
          <stringProp name="randomSeed"></stringProp>
          <boolProp name="perThread">false</boolProp>
        </RandomVariableConfig>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random_Variable_for_BOD_ID" enabled="true">
          <stringProp name="variableName">Random_BOD_ID</stringProp>
          <stringProp name="outputFormat">355667-88665</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="maximumValue">345667777900</stringProp>
          <stringProp name="randomSeed"></stringProp>
          <boolProp name="perThread">false</boolProp>
        </RandomVariableConfig>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="UpdateConsumer_ExactMatch" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Generate_Random_Numbers" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">${__Random(00000,99999,RandVariable)}
${__Random(00000,99999,RandVariable1)}</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(50,500)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
            <stringProp name="URL"></stringProp>
            <stringProp name="RESULT_CLASS">org.apache.jmeter.samplers.SampleResult</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random_Variable_for_First_Name" enabled="true">
              <stringProp name="maximumValue">2000000</stringProp>
              <stringProp name="minimumValue">1</stringProp>
              <stringProp name="outputFormat">12345</stringProp>
              <boolProp name="perThread">false</boolProp>
              <stringProp name="randomSeed"></stringProp>
              <stringProp name="variableName">Random_PersonDetails</stringProp>
            </RandomVariableConfig>
            <hashTree/>
            <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random_Variable_for_Address" enabled="true">
              <stringProp name="variableName">Random_Address</stringProp>
              <stringProp name="outputFormat">877566</stringProp>
              <stringProp name="minimumValue">1</stringProp>
              <stringProp name="maximumValue">34998877655</stringProp>
              <stringProp name="randomSeed"></stringProp>
              <boolProp name="perThread">false</boolProp>
            </RandomVariableConfig>
            <hashTree/>
            <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable_for_PersonalDetail" enabled="true">
              <stringProp name="variableName">Random_PersonalDetails</stringProp>
              <stringProp name="outputFormat">1</stringProp>
              <stringProp name="minimumValue">1</stringProp>
              <stringProp name="maximumValue">9</stringProp>
              <stringProp name="randomSeed"></stringProp>
              <boolProp name="perThread">false</boolProp>
            </RandomVariableConfig>
            <hashTree/>
            <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
              <stringProp name="variableName">Random_Contact</stringProp>
              <stringProp name="outputFormat">9876543212</stringProp>
              <stringProp name="minimumValue">1</stringProp>
              <stringProp name="maximumValue">5678999</stringProp>
              <stringProp name="randomSeed"></stringProp>
              <boolProp name="perThread">false</boolProp>
            </RandomVariableConfig>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GRIP-KAFKA-POST-Request" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;brand&quot;: &quot;VCC&quot;,&#xd;
  &quot;component&quot;: &quot;OM&quot;,&#xd;
  &quot;authorizationId&quot;: &quot;rosh8&quot;,&#xd;
  &quot;bodId&quot;: &quot;loadtest-7cd7-${Random_BOD_ID}&quot;,&#xd;
  &quot;consumer&quot;: {&#xd;
    &quot;consumerInfo&quot;: {&#xd;
      &quot;consumerCategory&quot;: &quot;Person&quot;,&#xd;
      &quot;consumerLanguage&quot;: &quot;de&quot;,&#xd;
      &quot;creationDateTime&quot;: &quot;${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}&quot;,&#xd;
      &quot;market&quot;: &quot;DE&quot;&#xd;
    },&#xd;
    &quot;alternativeConsumerId&quot;: [&#xd;
     &#xd;
      {&#xd;
        &quot;type&quot;: &quot;MyVolvoId&quot;,&#xd;
        &quot;value&quot;: &quot;loadtest-8161-${Random_AlternativeID}&quot;&#xd;
      }&#xd;
    ],&#xd;
 &#xd;
    &quot;person&quot;: {&#xd;
      &quot;dateOfBirth&quot;: &quot;1979-08-03&quot;,&#xd;
      &quot;employer&quot;: &quot;Coca Cola${Random_PersonalDetails}&quot;,&#xd;
      &quot;firstName&quot;: &quot;Tom${Random_PersonDetails}&quot;,&#xd;
      &quot;gender&quot;: &quot;F&quot;,&#xd;
     &#xd;
      &quot;maritalStatus&quot;: &quot;Married&quot;,&#xd;
      &quot;numberOfChildren&quot;: &quot;2&quot;,&#xd;
      &quot;personalId&quot;: &quot;${Random_PersonalID}&quot;,&#xd;
      &quot;secondSurname&quot;: &quot;Jason${Random_PersonalDetails}&quot;,&#xd;
      &quot;surname&quot;: &quot;Cruise${Random_PersonDetails}&quot;&#xd;
    },&#xd;
    &quot;address&quot;: [&#xd;
      {&#xd;
        &quot;addressLine1&quot;: &quot;916 West Burbank${Random_Address} 112&quot;,&#xd;
        &quot;addressLine2&quot;: &quot;Blvd., Suite${Random_Address}&quot;,&#xd;
         &quot;addressLine3&quot;: &quot;Street${Random_Address}&quot;,&#xd;
          &quot;addressLine4&quot;: &quot;Street${Random_Address}&quot;,&#xd;
        &quot;district&quot;: &quot;TT${Random_PersonalDetails}&quot;,&#xd;
        &quot;city&quot;: &quot;Zurich${Random_Address}&quot;,&#xd;
        &quot;country&quot;: &quot;SE&quot;,&#xd;
        &quot;main&quot;: &quot;true&quot;,&#xd;
        &quot;postalCodeNumber&quot;: &quot;${Random_PersonalDetails}&quot;,&#xd;
        &quot;type&quot;: &quot;ADDR_HOME&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;contactDetails&quot;: [&#xd;
      {&#xd;
        &quot;usage&quot;: &quot;CONT_NO_USG_HOME&quot;,&#xd;
        &quot;type&quot;: &quot;CONT_MED_PHONE&quot;,&#xd;
        &quot;active&quot;: &quot;true&quot;,&#xd;
        &quot;value&quot;: &quot;${Random_Contact}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;usage&quot;: &quot;CONT_NO_USG_MOBILE&quot;,&#xd;
        &quot;type&quot;: &quot;CONT_MED_PHONE&quot;,&#xd;
        &quot;active&quot;: &quot;true&quot;,&#xd;
        &quot;value&quot;: &quot;${Random_Contact}&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;contactPreference&quot;: [&#xd;
      {&#xd;
        &quot;type&quot;: &quot;CONT_PREF_DIRECT_MAIL&quot;,&#xd;
        &quot;value&quot;: &quot;Positive&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;type&quot;: &quot;CONT_PREF_EMAIL&quot;,&#xd;
        &quot;value&quot;: &quot;Positive&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;type&quot;: &quot;CONT_PREF_PHONE&quot;,&#xd;
        &quot;value&quot;: &quot;Positive&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;type&quot;: &quot;CONT_PREF_SMS&quot;,&#xd;
        &quot;value&quot;: &quot;Positive&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;emailAddress&quot;: [&#xd;
      {&#xd;
        &quot;usage&quot;: &quot;CONT_NO_USG_HOME&quot;,&#xd;
        &quot;active&quot;: &quot;true&quot;,&#xd;
        &quot;value&quot;: &quot;tes${Random_PersonalDetails}.email@test.com&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;usage&quot;: &quot;CONT_NO_USG_BUSINESS&quot;,&#xd;
        &quot;active&quot;: &quot;true&quot;,&#xd;
        &quot;value&quot;: &quot;Busin${Random_PersonalDetails}s2.email@test.com&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;partnerRelation&quot;: [&#xd;
    &#xd;
    ],&#xd;
    &quot;vehicleRelation&quot;: [&#xd;
     &#xd;
    ]&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">emea-grip-api-apimanager-qa.azure-api.net</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">consumer</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1827226577">ConsumerId</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">consumerid</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.responseDetails.consumerId.id[?(@.type == &apos;ConsumerId&apos;)].value</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-BOD-ID" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.bodId</stringProp>
                <stringProp name="EXPECTED_VALUE">loadtest-7cd7-${Random_BOD_ID}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GRIP-KAFKA-GET-Request" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">gw.qa.partner.api.volvocars.biz</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/consumer/consumerIds/${consumerid}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="161310165">${consumerid}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_firstName" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.personDetails.firstName</stringProp>
                <stringProp name="EXPECTED_VALUE">^Tom${Random_FirstName}.*</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_Surname" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.personDetails.surname</stringProp>
                <stringProp name="EXPECTED_VALUE">^Cruise${Random_FirstName}.*</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_AlternativeID_MyVolvoID" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.alternativeConsumerIds[?(@.type == &apos;ALT_ID_MY_VOLVO_ID&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">${Random_AlternativeID}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_AlternativeFalg_MyVolvoID" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.alternativeConsumerIds[?(@.type == &apos;ALT_ID_MY_VOLVO_ID&apos;)].active</stringProp>
                <stringProp name="EXPECTED_VALUE">True</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_Line1" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].addressLine1</stringProp>
                <stringProp name="EXPECTED_VALUE">^916 West Burbank${Random_Address}112*</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_Line2" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].addressLine2</stringProp>
                <stringProp name="EXPECTED_VALUE">^Blvd., Suite${Random_Address}*</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_Line3" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].addressLine3</stringProp>
                <stringProp name="EXPECTED_VALUE">^206C, Burbank${Random_Address}*</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_Line4" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].addressLine4</stringProp>
                <stringProp name="EXPECTED_VALUE">^CA 91506, USA${Random_Address}*</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_Additionalinfo_PersonalID" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.personDetails.personalId </stringProp>
                <stringProp name="EXPECTED_VALUE">${Random_PersonalID}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_ActiveFlag" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].active</stringProp>
                <stringProp name="EXPECTED_VALUE">True</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_City" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].city</stringProp>
                <stringProp name="EXPECTED_VALUE">Zurich${Random_Address}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_AdditionalInfo_MartialStatus" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.personDetails.maritalStatus</stringProp>
                <stringProp name="EXPECTED_VALUE">Married</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_AdditionalInfo_Birthdate" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.personDetails.dateOfBirth </stringProp>
                <stringProp name="EXPECTED_VALUE">1979-08-03T00:00:00</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-CreatedByComponent" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.sourceCode.createdBy</stringProp>
                <stringProp name="EXPECTED_VALUE">OM</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-UpdatedByComponent" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.sourceCode.updatedBy</stringProp>
                <stringProp name="EXPECTED_VALUE">+OM</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-ConsumerCateogry" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.consumerInfo.consumerCategory</stringProp>
                <stringProp name="EXPECTED_VALUE">Person</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Employeer" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.personDetails.employer</stringProp>
                <stringProp name="EXPECTED_VALUE">Coca Cola${Random_PersonalDetails}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Gender" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.personDetails.gender</stringProp>
                <stringProp name="EXPECTED_VALUE">Female</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-No_of_Childern" enabled="false">
                <stringProp name="JSON_PATH">$.responseDetails.personDetails.numberOfChildren</stringProp>
                <stringProp name="EXPECTED_VALUE">${Random_PersonalDetails}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-SecondSurname" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.personDetails.secondSurname</stringProp>
                <stringProp name="EXPECTED_VALUE">Jason${Random_PersonalDetails}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-District" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].district</stringProp>
                <stringProp name="EXPECTED_VALUE">TT${Random_PersonalDetails}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-PostalCode" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].postalCodeNumber</stringProp>
                <stringProp name="EXPECTED_VALUE">${Random_PersonalDetails}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-AddressActiveFlag" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].active</stringProp>
                <stringProp name="EXPECTED_VALUE">true</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-HomeEmail" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.emailAddresses.[?(@.usage == &apos;CONT_NO_USG_HOME&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">tes${Random_PersonalDetails}.email@test.com</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-HomeEmailActiveFlag" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.emailAddresses.[?(@.usage == &apos;CONT_NO_USG_HOME&apos;)].active</stringProp>
                <stringProp name="EXPECTED_VALUE">true</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-BusinessEmail" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.emailAddresses.[?(@.usage == &apos;CONT_NO_USG_BUSINESS&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">Busin${Random_PersonalDetails}s2.email@test.com</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-BusinessEmailActiveFlag" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.emailAddresses.[?(@.usage == &apos;CONT_NO_USG_BUSINESS&apos;)].active</stringProp>
                <stringProp name="EXPECTED_VALUE">true</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-HomeContact" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.contactDetails..[?(@.usage == &apos;CONT_NO_USG_HOME&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">${Random_Contact}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-MobileContact" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.contactDetails..[?(@.usage == &apos;CONT_NO_USG_MOBILE&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">${Random_Contact}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-MobileActiveFlag" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.contactDetails..[?(@.usage == &apos;CONT_NO_USG_MOBILE&apos;)].active</stringProp>
                <stringProp name="EXPECTED_VALUE">true</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-HomeActiveFlag" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.contactDetails..[?(@.usage == &apos;CONT_NO_USG_HOME&apos;)].active</stringProp>
                <stringProp name="EXPECTED_VALUE">true</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-AddresCountry" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].country</stringProp>
                <stringProp name="EXPECTED_VALUE">SE</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <RandomOrderController guiclass="RandomOrderControllerGui" testclass="RandomOrderController" testname="Random Order Controller" enabled="false"/>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="SC02_New_Consumer_Exact_Match" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Await-Consumer-Sync</stringProp>
              <stringProp name="Header.value">true</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json-patch+json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
              <stringProp name="Header.value">f17c8041cdbb43b290ff0c6e6350846e</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6InEtMjNmYWxldlpoaEQzaG05Q1Fia1A1TVF5VSIsImtpZCI6InEtMjNmYWxldlpoaEQzaG05Q1Fia1A1TVF5VSJ9.eyJhdWQiOiIxNjJkMDkzMy1lNjA0LTQ1ZTgtOTQ1Yi02NTc5YWIyYTg2OGIiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC84MWZhNzY2ZS1hMzQ5LTQ4NjctOGJmNC1hYjM1ZTI1MGEwOGYvIiwiaWF0IjoxNzEyNTcwMzE0LCJuYmYiOjE3MTI1NzAzMTQsImV4cCI6MTcxMjU3NDIxNCwiYWlvIjoiRTJOZ1lBais4YVhHd3ZEV0NkV0djcU40OXl0dUFBPT0iLCJhcHBpZCI6IjgxYzg0OGVjLWI1MGEtNDZhNS1hMDlmLTU0ODhlMzYyOTlmYSIsImFwcGlkYWNyIjoiMSIsImlkcCI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzgxZmE3NjZlLWEzNDktNDg2Ny04YmY0LWFiMzVlMjUwYTA4Zi8iLCJvaWQiOiJiNThiN2NkZS0zYzIyLTQ0OTktYTg5OS0xMzdlZDA3NThlMzUiLCJyaCI6IjAuQVF3QWJuYjZnVW1qWjBpTDlLczE0bENnanpNSkxSWUU1dWhGbEZ0bGVhc3Fob3NNQUFBLiIsInN1YiI6ImI1OGI3Y2RlLTNjMjItNDQ5OS1hODk5LTEzN2VkMDc1OGUzNSIsInRpZCI6IjgxZmE3NjZlLWEzNDktNDg2Ny04YmY0LWFiMzVlMjUwYTA4ZiIsInV0aSI6Im00SWUzdktmZVVTOWFMZFViNFpaQUEiLCJ2ZXIiOiIxLjAifQ.YQGU1gB9RxtVNP3RgAdf8vSifa7HvbF7aHNLmh2LCL3tAJYu4ZzPlvmGV5QRgtcMDvV6sDsgdIDwweAgcRN8lud_1dbbsLqeq2BLUmmByC7gjlUPkc5ARSWwmt6kYP0pLiBGTAGo8LZVkabfhaRgADeT8DmM_nT2-QPYKRTmUJRgePTqMj4XyucHXzcpTlCJj5_EbsTKTgZjYrwgIbo4_n-y-INYBIcaURHUaaPxv3_xnpaNewhCREAgX7ago0sQviaIthRVzLB_v5ol78RM-13HlCenTj-nCfht7vxPdyfiO0ZOwqsIJ-IffLvcsq-DLcVaRVqujCy9ZP24ArDt0w</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random_Variable_for_Alternative_ID" enabled="true">
          <stringProp name="variableName">Random_AlternativeID</stringProp>
          <stringProp name="outputFormat">45667-00009-122</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="maximumValue">45666700</stringProp>
          <stringProp name="randomSeed"></stringProp>
          <boolProp name="perThread">false</boolProp>
        </RandomVariableConfig>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random_Variable_for_Personal_ID" enabled="true">
          <stringProp name="variableName">Random_PersonalID</stringProp>
          <stringProp name="outputFormat">456781</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="maximumValue">567889900</stringProp>
          <stringProp name="randomSeed"></stringProp>
          <boolProp name="perThread">false</boolProp>
        </RandomVariableConfig>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random_Variable_for_BOD_ID" enabled="true">
          <stringProp name="variableName">Random_BOD_ID</stringProp>
          <stringProp name="outputFormat">355667-88665</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="maximumValue">345667777900</stringProp>
          <stringProp name="randomSeed"></stringProp>
          <boolProp name="perThread">false</boolProp>
        </RandomVariableConfig>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">cookie</stringProp>
              <stringProp name="Header.value">vts_CDB_QA=eyJraWQiOiJOZUl6c0UyMWQ1bjFfclBPbTh5WS10Tm8yQzBDY0ZtVzRWZ0d3aEtnTWwwIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJ0b2tlbl90eXBlIjoiQmVhcmVyIiwiYXVkIjoiQ0RCX1FBIiwic3ViIjoicF9jZGJxYSIsImZpcnN0TmFtZSI6InBfY2RicWEiLCJsYXN0TmFtZSI6InBfY2RicWEiLCJncm91cHMiOltdLCJ2dGkiOiI3N2U3NmIyYi05MGVjLTQwOGUtYWE0Zi01YzFhNDcxMWRiMTEiLCJjZHNpZCI6InBfY2RicWEiLCJpc3MiOiJ2b2x2b2NhcnMiLCJleHAiOjE3MTcyNDc0MzUsImlhdCI6MTY4NTcxMTQzNX0.keEdXejpgkuRs-9wA2q3w4t-lPIxC8Su7fJfvk98FB_71A3ZvTu9BtdPRksGAjMPeOqqMKcrG9HEayNBRYkDqxamwhI2JK3cfQamcQuf6nE60xbyP_Aj-sgnn8S2jQs_IkjhKdHEYezC5vM2um3IBTzHGnPfulrHP2u3Nh02TMtniVqh0ilMLJPimI8tHinvHUOdKSQA6qZm2V3xBncBdbIuntcH2jSBWG8cYfeaDIkQe1cHiBcOhd_0OdeWFn_TfOCGnkmP9mH406uK6pXzX6nhteFiaXrxeQyj4SYGWnIQJLVhDAKFMkdXr8GGt3Gi3A5Sasuizfv7pNED0NbRplqAs06hk6lhRYcJGCgE0B_5w1yJnvzmZ-oWhTZPBGF-YPOJwFZTKrutwIgxBQtMnAhOM2Gqva6VU7zhEFizSPYisgbTQawZ2WhxPf-csyYk7QWQmdLkmgj5P3HO9kE8IKofLY_OZ-D5MX5IZYO9AKwiibW7ue81jqM39B9a0axf5AJMYqYWHUTnmhhpCtplNu-d9Zbd3u461FctT2fi1jiTZp2GI0oLBU1ReUjqmVfAk34MTXYI2gPb9TsLHGucXwkPy-dcvQUgmh7alTbmAIoBJNcy9_5-DlGPVscnBkTljnBq2aKCtvCLIa60cgXb-5GYxMbkA2_lTnlhyQAvtQ8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="UpdateConsumer_ExactMatch" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Generate_Random_Numbers" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">${__Random(00000,99999,RandVariable)}
${__Random(00000,99999,RandVariable1)}</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(50,500)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
            <stringProp name="URL"></stringProp>
            <stringProp name="RESULT_CLASS">org.apache.jmeter.samplers.SampleResult</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random_Variable_for_First_Name" enabled="true">
              <stringProp name="maximumValue">2000000</stringProp>
              <stringProp name="minimumValue">1</stringProp>
              <stringProp name="outputFormat">12345</stringProp>
              <boolProp name="perThread">false</boolProp>
              <stringProp name="randomSeed"></stringProp>
              <stringProp name="variableName">Random_PersonDetails</stringProp>
            </RandomVariableConfig>
            <hashTree/>
            <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random_Variable_for_Address" enabled="true">
              <stringProp name="variableName">Random_Address</stringProp>
              <stringProp name="outputFormat">877566</stringProp>
              <stringProp name="minimumValue">1</stringProp>
              <stringProp name="maximumValue">34998877655</stringProp>
              <stringProp name="randomSeed"></stringProp>
              <boolProp name="perThread">false</boolProp>
            </RandomVariableConfig>
            <hashTree/>
            <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable_for_PersonalDetail" enabled="true">
              <stringProp name="variableName">Random_PersonalDetails</stringProp>
              <stringProp name="outputFormat">1</stringProp>
              <stringProp name="minimumValue">1</stringProp>
              <stringProp name="maximumValue">9</stringProp>
              <stringProp name="randomSeed"></stringProp>
              <boolProp name="perThread">false</boolProp>
            </RandomVariableConfig>
            <hashTree/>
            <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable_for_Contact" enabled="true">
              <stringProp name="variableName">Random_Contact</stringProp>
              <stringProp name="outputFormat">2345467891</stringProp>
              <stringProp name="minimumValue">1</stringProp>
              <stringProp name="maximumValue">34566677771</stringProp>
              <stringProp name="randomSeed"></stringProp>
              <boolProp name="perThread">false</boolProp>
            </RandomVariableConfig>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Create_Consumer_SE" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;brand&quot;: &quot;VCC&quot;,&#xd;
  &quot;component&quot;: &quot;OM&quot;,&#xd;
  &quot;authorizationId&quot;: &quot;rosh8&quot;,&#xd;
  &quot;bodId&quot;: &quot;loadtest-7cd7-${Random_BOD_ID}&quot;,&#xd;
  &quot;consumer&quot;: {&#xd;
    &quot;consumerInfo&quot;: {&#xd;
      &quot;consumerCategory&quot;: &quot;Person&quot;,&#xd;
      &quot;consumerLanguage&quot;: &quot;de&quot;,&#xd;
      &quot;creationDateTime&quot;: &quot;${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}&quot;,&#xd;
      &quot;market&quot;: &quot;DE&quot;&#xd;
    },&#xd;
    &quot;alternativeConsumerId&quot;: [&#xd;
     &#xd;
      {&#xd;
        &quot;type&quot;: &quot;MyVolvoId&quot;,&#xd;
        &quot;value&quot;: &quot;loadtest-8161-${Random_AlternativeID}&quot;&#xd;
      }&#xd;
    ],&#xd;
 &#xd;
    &quot;person&quot;: {&#xd;
      &quot;dateOfBirth&quot;: &quot;1979-08-03&quot;,&#xd;
        &quot;employer&quot;: &quot;Coca Cola${Random_PersonalDetails}&quot;,&#xd;
      &quot;firstName&quot;: &quot;Tom${Random_PersonDetails}&quot;,&#xd;
      &quot;gender&quot;: &quot;F&quot;,&#xd;
     &#xd;
      &quot;maritalStatus&quot;: &quot;Married&quot;,&#xd;
      &quot;numberOfChildren&quot;: &quot;2&quot;,&#xd;
      &quot;personalId&quot;: &quot;${Random_PersonalDetails}&quot;,&#xd;
      &quot;secondSurname&quot;: &quot;Jason${Random_PersonalDetails}&quot;,&#xd;
       &quot;surname&quot;: &quot;Cruise${Random_PersonDetails}&quot;&#xd;
    },&#xd;
    &quot;address&quot;: [&#xd;
      {&#xd;
         &quot;addressLine1&quot;: &quot;916 West Burbank${Random_Address} 112&quot;,&#xd;
        &quot;addressLine2&quot;: &quot;Blvd., Suite${Random_Address}&quot;,&#xd;
         &quot;addressLine3&quot;: &quot;Street${Random_Address}&quot;,&#xd;
          &quot;addressLine4&quot;: &quot;Street${Random_Address}&quot;,&#xd;
        &quot;district&quot;: &quot;TT${Random_PersonalDetails}&quot;,&#xd;
        &quot;city&quot;: &quot;Zurich${Random_Address}&quot;,&#xd;
        &quot;country&quot;: &quot;DE&quot;,&#xd;
        &quot;main&quot;: &quot;true&quot;,&#xd;
        &quot;postalCodeNumber&quot;: &quot;${Random_PersonalDetails}&quot;,&#xd;
        &quot;type&quot;: &quot;ADDR_HOME&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;contactDetails&quot;: [&#xd;
      {&#xd;
        &quot;usage&quot;: &quot;CONT_NO_USG_HOME&quot;,&#xd;
        &quot;type&quot;: &quot;CONT_MED_PHONE&quot;,&#xd;
        &quot;active&quot;: &quot;true&quot;,&#xd;
        &quot;value&quot;: &quot;${RandVariable}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;usage&quot;: &quot;CONT_NO_USG_MOBILE&quot;,&#xd;
        &quot;type&quot;: &quot;CONT_MED_PHONE&quot;,&#xd;
        &quot;active&quot;: &quot;true&quot;,&#xd;
        &quot;value&quot;: &quot;${RandVariable}&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;contactPreference&quot;: [&#xd;
      {&#xd;
        &quot;type&quot;: &quot;CONT_PREF_DIRECT_MAIL&quot;,&#xd;
        &quot;value&quot;: &quot;Positive&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;type&quot;: &quot;CONT_PREF_EMAIL&quot;,&#xd;
        &quot;value&quot;: &quot;Positive&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;type&quot;: &quot;CONT_PREF_PHONE&quot;,&#xd;
        &quot;value&quot;: &quot;Positive&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;type&quot;: &quot;CONT_PREF_SMS&quot;,&#xd;
        &quot;value&quot;: &quot;Positive&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;emailAddress&quot;: [&#xd;
      {&#xd;
        &quot;usage&quot;: &quot;CONT_NO_USG_HOME&quot;,&#xd;
        &quot;active&quot;: &quot;true&quot;,&#xd;
        &quot;value&quot;: &quot;tes${RandVariable}.email@test.co&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;usage&quot;: &quot;CONT_NO_USG_BUSINESS&quot;,&#xd;
        &quot;active&quot;: &quot;true&quot;,&#xd;
        &quot;value&quot;: &quot;Busin${RandVariable}s2.email@test.co&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;partnerRelation&quot;: [&#xd;
    &#xd;
    ],&#xd;
    &quot;vehicleRelation&quot;: [&#xd;
     &#xd;
    ]&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">emea-grip-api-apimanager-qa.azure-api.net</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">consumer</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1827226577">ConsumerId</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">consumerid</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.responseDetails.consumerId.id[?(@.type == &apos;ConsumerId&apos;)].value</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">gw.qa.partner.api.volvocars.biz</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/consumer/consumerIds/${consumerid}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_firstName" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.personDetails.firstName</stringProp>
                <stringProp name="EXPECTED_VALUE">^Tom${Random_FirstName}.*</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_Surname" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.personDetails.surname</stringProp>
                <stringProp name="EXPECTED_VALUE">^Cruise${Random_FirstName}.*</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_AlternativeID_MyVolvoID" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.alternativeConsumerIds[?(@.type == &apos;ALT_ID_MY_VOLVO_ID&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">${Random_AlternativeID}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_AlternativeFalg_MyVolvoID" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.alternativeConsumerIds[?(@.type == &apos;ALT_ID_MY_VOLVO_ID&apos;)].active</stringProp>
                <stringProp name="EXPECTED_VALUE">True</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_Line1" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].addressLine1</stringProp>
                <stringProp name="EXPECTED_VALUE">^916 West Burbank${Random_Address}112*</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_Line2" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].addressLine2</stringProp>
                <stringProp name="EXPECTED_VALUE">^Blvd., Suite${Random_Address}*</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_Line3" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].addressLine3</stringProp>
                <stringProp name="EXPECTED_VALUE">^206C, Burbank${Random_Address}*</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_Line4" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].addressLine4</stringProp>
                <stringProp name="EXPECTED_VALUE">^CA 91506, USA${Random_Address}*</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_Additionalinfo_PersonalID" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.personDetails.personalId </stringProp>
                <stringProp name="EXPECTED_VALUE">${Random_PersonalID}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_ActiveFlag" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].active</stringProp>
                <stringProp name="EXPECTED_VALUE">True</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Address_City" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].city</stringProp>
                <stringProp name="EXPECTED_VALUE">Zurich${Random_Address}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_AdditionalInfo_MartialStatus" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.personDetails.maritalStatus</stringProp>
                <stringProp name="EXPECTED_VALUE">Married</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion_AdditionalInfo_Birthdate" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.personDetails.dateOfBirth </stringProp>
                <stringProp name="EXPECTED_VALUE">1979-08-03T00:00:00</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-CreatedByComponent" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.sourceCode.createdBy</stringProp>
                <stringProp name="EXPECTED_VALUE">OM</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-UpdatedByComponent" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.sourceCode.updatedBy</stringProp>
                <stringProp name="EXPECTED_VALUE">+OM</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-ConsumerCateogry" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.consumerInfo.consumerCategory</stringProp>
                <stringProp name="EXPECTED_VALUE">Person</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Employeer" enabled="false">
                <stringProp name="JSON_PATH">$.responseDetails.personDetails.employer</stringProp>
                <stringProp name="EXPECTED_VALUE">Coca Cola${Random_PersonalDetails}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-Gender" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.personDetails.gender</stringProp>
                <stringProp name="EXPECTED_VALUE">Female</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-SecondSurname" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.personDetails.secondSurname</stringProp>
                <stringProp name="EXPECTED_VALUE">Jason${Random_PersonalDetails}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-District" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].district</stringProp>
                <stringProp name="EXPECTED_VALUE">TT${Random_PersonalDetails}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-PostalCode" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].postalCodeNumber</stringProp>
                <stringProp name="EXPECTED_VALUE">${Random_PersonalDetails}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-AddressActiveFlag" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].active</stringProp>
                <stringProp name="EXPECTED_VALUE">true</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-HomeEmail" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.emailAddresses.[?(@.usage == &apos;CONT_NO_USG_HOME&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">tes${Random_PersonalDetails}.email@test.com</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-HomeEmailActiveFlag" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.emailAddresses.[?(@.usage == &apos;CONT_NO_USG_HOME&apos;)].active</stringProp>
                <stringProp name="EXPECTED_VALUE">true</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-BusinessEmail" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.emailAddresses.[?(@.usage == &apos;CONT_NO_USG_BUSINESS&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">Busin${Random_PersonalDetails}s2.email@test.com</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-BusinessEmailActiveFlag" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.emailAddresses.[?(@.usage == &apos;CONT_NO_USG_BUSINESS&apos;)].active</stringProp>
                <stringProp name="EXPECTED_VALUE">true</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-HomeContact" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.contactDetails..[?(@.usage == &apos;CONT_NO_USG_HOME&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">${Random_Contact}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-MobileContact" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.contactDetails..[?(@.usage == &apos;CONT_NO_USG_MOBILE&apos;)].value</stringProp>
                <stringProp name="EXPECTED_VALUE">${Random_Contact}</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-MobileActiveFlag" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.contactDetails..[?(@.usage == &apos;CONT_NO_USG_MOBILE&apos;)].active</stringProp>
                <stringProp name="EXPECTED_VALUE">true</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-HomeActiveFlag" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.contactDetails..[?(@.usage == &apos;CONT_NO_USG_HOME&apos;)].active</stringProp>
                <stringProp name="EXPECTED_VALUE">true</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion-AddresCountry" enabled="true">
                <stringProp name="JSON_PATH">$.responseDetails.addresses[0].country</stringProp>
                <stringProp name="EXPECTED_VALUE">SE</stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <RandomOrderController guiclass="RandomOrderControllerGui" testclass="RandomOrderController" testname="Random Order Controller" enabled="false"/>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="SC02_New_Consumer_Exact_Match" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">3</stringProp>
        <stringProp name="ThreadGroup.ramp_time">2</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Await-Consumer-Sync</stringProp>
              <stringProp name="Header.value">true</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json-patch+json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
              <stringProp name="Header.value">f17c8041cdbb43b290ff0c6e6350846e</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6InEtMjNmYWxldlpoaEQzaG05Q1Fia1A1TVF5VSIsImtpZCI6InEtMjNmYWxldlpoaEQzaG05Q1Fia1A1TVF5VSJ9.eyJhdWQiOiIxNjJkMDkzMy1lNjA0LTQ1ZTgtOTQ1Yi02NTc5YWIyYTg2OGIiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC84MWZhNzY2ZS1hMzQ5LTQ4NjctOGJmNC1hYjM1ZTI1MGEwOGYvIiwiaWF0IjoxNzEyNTcwMzE0LCJuYmYiOjE3MTI1NzAzMTQsImV4cCI6MTcxMjU3NDIxNCwiYWlvIjoiRTJOZ1lBais4YVhHd3ZEV0NkV0djcU40OXl0dUFBPT0iLCJhcHBpZCI6IjgxYzg0OGVjLWI1MGEtNDZhNS1hMDlmLTU0ODhlMzYyOTlmYSIsImFwcGlkYWNyIjoiMSIsImlkcCI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzgxZmE3NjZlLWEzNDktNDg2Ny04YmY0LWFiMzVlMjUwYTA4Zi8iLCJvaWQiOiJiNThiN2NkZS0zYzIyLTQ0OTktYTg5OS0xMzdlZDA3NThlMzUiLCJyaCI6IjAuQVF3QWJuYjZnVW1qWjBpTDlLczE0bENnanpNSkxSWUU1dWhGbEZ0bGVhc3Fob3NNQUFBLiIsInN1YiI6ImI1OGI3Y2RlLTNjMjItNDQ5OS1hODk5LTEzN2VkMDc1OGUzNSIsInRpZCI6IjgxZmE3NjZlLWEzNDktNDg2Ny04YmY0LWFiMzVlMjUwYTA4ZiIsInV0aSI6Im00SWUzdktmZVVTOWFMZFViNFpaQUEiLCJ2ZXIiOiIxLjAifQ.YQGU1gB9RxtVNP3RgAdf8vSifa7HvbF7aHNLmh2LCL3tAJYu4ZzPlvmGV5QRgtcMDvV6sDsgdIDwweAgcRN8lud_1dbbsLqeq2BLUmmByC7gjlUPkc5ARSWwmt6kYP0pLiBGTAGo8LZVkabfhaRgADeT8DmM_nT2-QPYKRTmUJRgePTqMj4XyucHXzcpTlCJj5_EbsTKTgZjYrwgIbo4_n-y-INYBIcaURHUaaPxv3_xnpaNewhCREAgX7ago0sQviaIthRVzLB_v5ol78RM-13HlCenTj-nCfht7vxPdyfiO0ZOwqsIJ-IffLvcsq-DLcVaRVqujCy9ZP24ArDt0w</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">cookie</stringProp>
              <stringProp name="Header.value">vts_CDB_QA=eyJraWQiOiJOZUl6c0UyMWQ1bjFfclBPbTh5WS10Tm8yQzBDY0ZtVzRWZ0d3aEtnTWwwIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJ0b2tlbl90eXBlIjoiQmVhcmVyIiwiYXVkIjoiQ0RCX1FBIiwic3ViIjoicF9jZGJxYSIsImZpcnN0TmFtZSI6InBfY2RicWEiLCJsYXN0TmFtZSI6InBfY2RicWEiLCJncm91cHMiOltdLCJ2dGkiOiI3N2U3NmIyYi05MGVjLTQwOGUtYWE0Zi01YzFhNDcxMWRiMTEiLCJjZHNpZCI6InBfY2RicWEiLCJpc3MiOiJ2b2x2b2NhcnMiLCJleHAiOjE3MTcyNDc0MzUsImlhdCI6MTY4NTcxMTQzNX0.keEdXejpgkuRs-9wA2q3w4t-lPIxC8Su7fJfvk98FB_71A3ZvTu9BtdPRksGAjMPeOqqMKcrG9HEayNBRYkDqxamwhI2JK3cfQamcQuf6nE60xbyP_Aj-sgnn8S2jQs_IkjhKdHEYezC5vM2um3IBTzHGnPfulrHP2u3Nh02TMtniVqh0ilMLJPimI8tHinvHUOdKSQA6qZm2V3xBncBdbIuntcH2jSBWG8cYfeaDIkQe1cHiBcOhd_0OdeWFn_TfOCGnkmP9mH406uK6pXzX6nhteFiaXrxeQyj4SYGWnIQJLVhDAKFMkdXr8GGt3Gi3A5Sasuizfv7pNED0NbRplqAs06hk6lhRYcJGCgE0B_5w1yJnvzmZ-oWhTZPBGF-YPOJwFZTKrutwIgxBQtMnAhOM2Gqva6VU7zhEFizSPYisgbTQawZ2WhxPf-csyYk7QWQmdLkmgj5P3HO9kE8IKofLY_OZ-D5MX5IZYO9AKwiibW7ue81jqM39B9a0axf5AJMYqYWHUTnmhhpCtplNu-d9Zbd3u461FctT2fi1jiTZp2GI0oLBU1ReUjqmVfAk34MTXYI2gPb9TsLHGucXwkPy-dcvQUgmh7alTbmAIoBJNcy9_5-DlGPVscnBkTljnBq2aKCtvCLIa60cgXb-5GYxMbkA2_lTnlhyQAvtQ8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="UpdateConsumer_ExactMatch" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Generate_Random_Numbers" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">${__Random(00000,99999,RandVariable)}
${__Random(00000,99999,RandVariable1)}</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(50,500)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
            <stringProp name="URL"></stringProp>
            <stringProp name="RESULT_CLASS">org.apache.jmeter.samplers.SampleResult</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Create_Consumer_SE" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;brand&quot;: &quot;VCC&quot;,&#xd;
  &quot;component&quot;: &quot;OM&quot;,&#xd;
  &quot;authorizationId&quot;: &quot;rosh8&quot;,&#xd;
  &quot;bodId&quot;: &quot;loadtest-7cd7-${RandVariable}&quot;,&#xd;
  &quot;consumer&quot;: {&#xd;
    &quot;consumerInfo&quot;: {&#xd;
      &quot;consumerCategory&quot;: &quot;Person&quot;,&#xd;
      &quot;consumerLanguage&quot;: &quot;de&quot;,&#xd;
      &quot;creationDateTime&quot;: &quot;${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}&quot;,&#xd;
      &quot;market&quot;: &quot;SE&quot;&#xd;
    },&#xd;
    &quot;alternativeConsumerId&quot;: [&#xd;
     &#xd;
      {&#xd;
        &quot;type&quot;: &quot;MyVolvoId&quot;,&#xd;
        &quot;value&quot;: &quot;loadtest-8161-${__RandomString(6,1236547890,)}&quot;&#xd;
      }&#xd;
    ],&#xd;
 &#xd;
    &quot;person&quot;: {&#xd;
      &quot;dateOfBirth&quot;: &quot;1979-08-03&quot;,&#xd;
      &quot;employer&quot;: &quot;Coca Cola&quot;,&#xd;
      &quot;firstName&quot;: &quot;TestG6${RandVariable}&quot;,&#xd;
      &quot;gender&quot;: &quot;F&quot;,&#xd;
     &#xd;
      &quot;maritalStatus&quot;: &quot;Divorced&quot;,&#xd;
      &quot;numberOfChildren&quot;: &quot;2&quot;,&#xd;
      &quot;personalId&quot;: &quot;${RandVariable}&quot;,&#xd;
      &quot;secondSurname&quot;: &quot;Jason&quot;,&#xd;
      &quot;surname&quot;: &quot;PerfTest${RandVariable}&quot;&#xd;
    },&#xd;
    &quot;address&quot;: [&#xd;
      {&#xd;
        &quot;addressLine1&quot;: &quot;load c${RandVariable} 112&quot;,&#xd;
        &quot;addressLine2&quot;: &quot;test a${RandVariable}&quot;,&#xd;
        &quot;addressLine3&quot;: &quot;test b${RandVariable}&quot;,&#xd;
        &quot;addressLine4&quot;: &quot;test c${RandVariable}&quot;,&#xd;
        &quot;district&quot;: &quot;TT&quot;,&#xd;
        &quot;city&quot;: &quot;Zurich&quot;,&#xd;
        &quot;country&quot;: &quot;SE&quot;,&#xd;
        &quot;main&quot;: &quot;true&quot;,&#xd;
        &quot;postalCodeNumber&quot;: &quot;${RandVariable}&quot;,&#xd;
        &quot;type&quot;: &quot;ADDR_HOME&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;contactDetails&quot;: [&#xd;
      {&#xd;
        &quot;usage&quot;: &quot;CONT_NO_USG_HOME&quot;,&#xd;
        &quot;type&quot;: &quot;CONT_MED_PHONE&quot;,&#xd;
        &quot;active&quot;: &quot;true&quot;,&#xd;
        &quot;value&quot;: &quot;${RandVariable}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;usage&quot;: &quot;CONT_NO_USG_MOBILE&quot;,&#xd;
        &quot;type&quot;: &quot;CONT_MED_PHONE&quot;,&#xd;
        &quot;active&quot;: &quot;true&quot;,&#xd;
        &quot;value&quot;: &quot;${RandVariable}&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;contactPreference&quot;: [&#xd;
      {&#xd;
        &quot;type&quot;: &quot;CONT_PREF_DIRECT_MAIL&quot;,&#xd;
        &quot;value&quot;: &quot;Positive&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;type&quot;: &quot;CONT_PREF_EMAIL&quot;,&#xd;
        &quot;value&quot;: &quot;Positive&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;type&quot;: &quot;CONT_PREF_PHONE&quot;,&#xd;
        &quot;value&quot;: &quot;Positive&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;type&quot;: &quot;CONT_PREF_SMS&quot;,&#xd;
        &quot;value&quot;: &quot;Positive&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;emailAddress&quot;: [&#xd;
      {&#xd;
        &quot;usage&quot;: &quot;CONT_NO_USG_HOME&quot;,&#xd;
        &quot;active&quot;: &quot;true&quot;,&#xd;
        &quot;value&quot;: &quot;tes${RandVariable}.email@test.co&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;usage&quot;: &quot;CONT_NO_USG_BUSINESS&quot;,&#xd;
        &quot;active&quot;: &quot;true&quot;,&#xd;
        &quot;value&quot;: &quot;Busin${RandVariable}s2.email@test.co&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;partnerRelation&quot;: [&#xd;
    &#xd;
    ],&#xd;
    &quot;vehicleRelation&quot;: [&#xd;
     &#xd;
    ]&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">emea-grip-api-apimanager-qa.azure-api.net</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">consumer</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1827226577">ConsumerId</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <RandomOrderController guiclass="RandomOrderControllerGui" testclass="RandomOrderController" testname="Random Order Controller" enabled="false"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path"></stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings"/>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <url>true</url>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
              <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <url>true</url>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
              <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <url>true</url>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
